<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE module [
  <!ELEMENT module (dtdversion,name,version,description*,help*,about*,requires*,file+)>
  <!ELEMENT dtdversion (#PCDATA)>
  <!ELEMENT name (#PCDATA)>
  <!ELEMENT version (#PCDATA)>
  <!ELEMENT mincmsversion (#PCDATA)>
  <!ELEMENT description (#PCDATA)>
  <!ELEMENT help (#PCDATA)>
  <!ELEMENT about (#PCDATA)>
  <!ELEMENT requires (requiredname,requiredversion)>
  <!ELEMENT requiredname (#PCDATA)>
  <!ELEMENT requiredversion (#PCDATA)>
  <!ELEMENT file (filename,isdir,data)>
  <!ELEMENT filename (#PCDATA)>
  <!ELEMENT isdir (#PCDATA)>
  <!ELEMENT data (#PCDATA)>
]>
<module>
	<dtdversion>1.3</dtdversion>
	<name>CMSFoundation</name>
	<version>1.4.1</version>
  <mincmsversion>1.7</mincmsversion>
	<help><![CDATA[LS0gTWlzc2luZyBMYW5ndWFnZXN0cmluZyAtIG1vZHVsZTpDTVNGb3VuZGF0aW9uIHN0cmluZzpoZWxwLS08aDM+RGVwZW5kZW5jaWVzPC9oMz48dWw+PGxpPkNHRXh0ZW5zaW9ucyA9Jmd0OyAxLjI0PC9saT48bGk+Q0dTaW1wbGVTbWFydHkgPSZndDsgMS40LjQ8L2xpPjxsaT5KUXVlcnlUb29scyA9Jmd0OyAxLjAuMTE8L2xpPjwvdWw+PGgzPlBhcmFtZXRlcnM8L2gzPjx1bD48bGk+PGVtPihvcHRpb25hbCk8L2VtPiBsYW5nPSJlbl9VUyIgLSBQYXJhbSZlZ3JhdmU7dHJlIHV0aWxpcyZlYWN1dGU7IHBvdXIgc3AmZWFjdXRlO2NpZmllciBkYW5zIHF1ZWxsZSBsYW5ndWUgYWZmaWNoZXIgbGUgbW9kdWxlIGRhbnMgbGEgcGFydGllIHB1YmxpcXVlLiBDZSBwYXJhbSZlZ3JhdmU7dHJlIG4mIzAzOTtlc3QgcGFzIHN1cHBvcnQmZWFjdXRlOyBvdSB1dGlsZSBwb3VyIHRvdXMgbGVzIG1vZHVsZXMuPC9saT48L3VsPg==]]></help>
	<about><![CDATA[PGJyIC8+QXV0aG9yOiBOaWNvbGFzIEdyaWxsZXQgJmx0O24uZ3JpbGxldDAxQGdtYWlsLmNvbSZndDs8YnIgLz48YnIgLz5WZXJzaW9uOiAxLjQuMTxiciAvPjxiciAvPkNoYW5nZSBIaXN0b3J5OjxiciAvPi0tIE1pc3NpbmcgTGFuZ3VhZ2VzdHJpbmcgLSBtb2R1bGU6Q01TRm91bmRhdGlvbiBzdHJpbmc6Y2hhbmdlbG9nLS08YnIgLz4=]]></about>
	<description><![CDATA[-- Missing Languagestring - module:CMSFoundation string:moddescription--]]></description>
	<requires>
	  <requiredname>CGExtensions</requiredname>
	  <requiredversion>1.24</requiredversion>
	</requires>
	<requires>
	  <requiredname>CGSimpleSmarty</requiredname>
	  <requiredversion>1.4.4</requiredversion>
	</requires>
	<requires>
	  <requiredname>JQueryTools</requiredname>
	  <requiredversion>1.0.11</requiredversion>
	</requires>
	<file>
	  <filename>/</filename>
	  <isdir>1</isdir>
	</file>
	<file>
	  <filename>/action.default.php</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[PD9waHANCmlmICghaXNzZXQoJGdDbXMpKSBleGl0Ow0KJGNvbmZpZyA9IGNtc21zKCktPkdldENvbmZpZygpOw0KJGYgPSAkY29uZmlnWydyb290X3VybCddLiIvbW9kdWxlcy9DTVNGb3VuZGF0aW9uL2Fzc2V0cy8iOw0KJGNhY2hlX2lkID0gJ3xucycubWQ1KHNlcmlhbGl6ZSgkcGFyYW1zKSk7DQokY29tcGlsZV9pZCA9ICcnOw0KJHN0ciA9ICI8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMFwiIC8+XG4iOw0KJHN0ciAuPSAiPGxpbmsgaHJlZj1cIiIuJGYuIi9zdHlsZXNoZWV0cy9mb3VuZGF0aW9uLm1pbi5jc3NcIiB0eXBlPVwidGV4dC9jc3NcIiByZWw9XCJzdHlsZXNoZWV0XCIgLz5cbiI7DQokc3RyIC49ICI8c2NyaXB0IHNyYz1cIiIuJGYuIi9qYXZhc2NyaXB0cy9tb2Rlcm5penIuZm91bmRhdGlvbi5qc1wiIHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj48L3NjcmlwdD5cbiI7DQokc3RyIC49ICI8c2NyaXB0IHNyYz1cIiIuJGYuIi9qYXZhc2NyaXB0cy9mb3VuZGF0aW9uLm1pbi5qc1wiIHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj48L3NjcmlwdD5cbiI7DQplY2hvICRzdHI7DQokb2JqID0gY2dlX3V0aWxzOjpnZXRfbW9kdWxlKCdKUXVlcnlUb29scycpOw0KaWYoIGlzX29iamVjdCgkb2JqKSApDQp7DQokdG1wbCA9IDw8PEVPVA0Ke0pRdWVyeVRvb2xzIGFjdGlvbj0naW5janMnIGV4Y2x1ZGU9J2Zvcm0sdWksdGFibGVzb3J0ZXIsZmlsZXVwbG9hZCxmYW5jeWJveCxjbHVldGlwLGxpZ2h0Ym94LGNnZm9ybSxqcXVlcnl0b29scyxqc29uJ30NCkVPVDsNCmVjaG8gJHRoaXMtPlByb2Nlc3NUZW1wbGF0ZUZyb21EYXRhKCR0bXBsKTsNCn0NCj8+]]></data>
	</file>
	<file>
	  <filename>/assets/</filename>
	  <isdir>1</isdir>
	</file>
	<file>
	  <filename>/assets/images/</filename>
	  <isdir>1</isdir>
	</file>
	<file>
	  <filename>/assets/images/foundation/</filename>
	  <isdir>1</isdir>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/</filename>
	  <isdir>1</isdir>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/bullets.jpg</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/bAIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgADAAVAwERAAIRAQMRAf/EAGUAAQEBAAAAAAAAAAAAAAAAAAkIBAEBAAAAAAAAAAAAAAAAAAAAABAAAAIIBAYCAwEAAAAAAAAAAgcDEwQFBhcIGQEVFgkAEhQlJhgRIkEjRQoRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AMbt/wBY1ZTVu1IKdE5CFhhS011XApkRloGGIpAfLO5kxnSuQxYKKRRMJjGZaN5DwbUjpxdWDvFhhi7sAhS9w4BiWsqjC3k9wrcBKk5qpqkCCpT2+Y4LYjS6p3pgNNqJeITFMCK4IFGESncdETulgan/ABA6mlOITPDLF9WMKBAsRK0iNsxbwmWH3PWS9KnDb2JmncSqBwKyB6iqd4kclWjPFzp9zRUomnSrVCd0UUrPg2BOoTbgZAIoJ10JHbEgABeuMPCbkwwCd6t1ABckFia5im6f0gufZ6kWcmkpvzC6Aa/k/hTny7mWcvlSv55vzwBK7vmiLhsQW2bh90eUEHe1NvPQ8uJSfrl37aTD8NmPp/l0v8dwy/pl/wBcv4CaXdbMtyRjld1q4HcKLbXPSLbulyuWprSpz9X4zoSUussoW9g0/mSrvy7gP//ZCg==]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/left-arrow-small.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[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]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/left-arrow.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAE4AAABkCAYAAAAonQZNAAAB0UlEQVR42u3cO07DQBSFYRdpU2QZKbK2LMSSq+wgS8ACWYYtkA6EIiogFQ0FlWVAligoY6SZOefmt3QkV3OvPvk1Y8tVVVVX5F8BATjggAOOAAcccMABR4ADDjjggCPAAQcccKpZLBbtbrd76vv+bbVa3QB3JlrXda/fv9tms7kDbiZaXdcPnKoz0ZqmeeQap4/mByeC5gUnhOYDJ4bmASeIpg8niqYNJ4ymCyeOpglngKYHZ4KmBWeEpgNnhqYBZ4hWHs4UrSycMVo5OHO0MnAB0PLDBUHLCxcILR9cMLQ8cAHR0sMFRUsLFxgtHVxwtDRwF4CWBm6/3z8HR0sDdzqdPie06ajjM68Zadv2ZYIbx/Fru93eA3dmlsvl9eFweA+Ol2bgC8BLN3hwvLQFAuOlLxIUL0+hgHj5igXDy1swEF7+okHwyhQOgFeuuDle2QaM8co3YYqn0Yghnk4zZnhaDRnh6TVlgqd5Khjg6V6AxfG0b/vCePoPm6J4HlMcQTyfibUYntdyjhCe3yKiCJ7n0rUAnu8Lk8J43q/p/uINwzCu1+tb4GbgTf9VOh6PH9M+cKzHAUeAAw444IAjwAEHHHDAEeCAAw44AhxwwLnkB9OTz7qHLRlAAAAAAElFTkSuQmCCCg==]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/loading.gif</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[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]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/mask-black.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAAH7+Yj7AAAB1UlEQVRYw81YQWcEMRQOZU9l6KkMcy17WoZee13KnErpqT+gP6MMpaeyp7IsQ+lf2WuvpZSelmUZliXNbJPtzORl8jLJbPL4LvHNt1+Sl5e8JZRSInCI1iDdA2DiBpufs0ilHzqwWoOypmpQ/hx0IUgdRBHf4MwBIsESqY5o7JHoiEJthSVq17E9GS1xxokfOuIpdh3XnFh0ES9NkyLHEOPOdUT8SrURCXoHkZsl542hoIiIoQREi76CcPr/4c5WMJZELQWzluDORjAFpnxmKnjNUwba6dhV2jzZ5OGOYc4wIsp9xwuqRRyclFfXggJXQ5zl5yGKQ2ZTHPLOitPzpCSA4MK22uToC82ifDkXTFwLjl0LjmwEI9dr2L6oShvBL8Bdaio4YXhRnJJ1EBe9XsxS8N1FgV02SpWNYM+ZLPlGTknfGNgghJLfGlGoBuvYMjyEbLCOx2MZPOFVJ+N908rAZMU9H9qgKqpu6wdpdOzDYN3oFnGQIl8Gyb5N+G9yVVj4NAg1S1RqnkweDAMYHKFy0aPBC4TBxKfBmcbcp88czBGrd+/DYNz481CNt2PWwYhfYyWySBeh3sUVbkN9LMxDfM1sGG5Ceg9uePKnvl/UE+IwfgEt5tjhwATtOwAAAABJRU5ErkJgggo=]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/pause-black.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAABQCAYAAABrjzfBAAAA50lEQVRo3u3WwaaCQRTA8f88QT1hjxFxibhERLRqcyPuA7S8T9GqbUS0ShER19zNDN+mxbdI5+p/NjOGmfmZ48xMyjkTOZJAgQIFChQoUODTgCmlDnBuDpW2uWg353wRKFCgQIECBfqbEShQoECBAgUKFChQoECBAgVGAqaUWs9pu99bAH+APrCJCqwLfAMfwC4qEOAOLIAhcIoIrHEFJsC09MMBaxyBUTnV34jAGiugFxG4BQbAOlqKD6VQljW1UYAXYAzMgFukKr4Dc+Dz0fXySuBXSefet9j/oECBAgUKFCjw3wH/AMYfhXCrzL4NAAAAAElFTkSuQmCCCg==]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/right-arrow-small.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[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]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/right-arrow.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[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]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/rotator-black.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAAH7+Yj7AAAB30lEQVRYw82XQWcDQRTH/4Rcl5zKEkoJIZQln6GUPZVS+m3CnnoqoZQSlnyYXnvqqZSelhBCKdNDZ9vp5GXn7czbnTz2kPHff37zZua9WcAIpRSUUn+/f8b2B8Ee3Hv9V1UPXpuqelBRSnIQ1Ot1XNkU5Nv6Gdv2pnBqCNEkNB3fXEIyU01CADh1CVWbWTcK19xZ/xOJChOXcOazMqyE37VdmTpK179wDB9t3BBDyqhoShg7iaaRj+GYMESI4VDaEAB2luFnqCEAVAcW5h7Aue+2geS2oeICwLOkYR1ZqOEZgK3UlLeSOVRdn2Vvw5Iw2bnKbpvi8B5yUm6lz/KrZVaGGtp0E2nDJNTwyzLMQw1XluEm1DAhpp2FFljqdMxDDE8OmFYALn1bQCFdHABg0UULGOmuJ95TBrrjqS56ih1DvVgPAF58ZiINOAKwJE6p99pJARYuoFiArcH6Akx1LeQCVXrpc13uBl0CzphQH3aZ9CmZbQFHxA1bETfuuWvTdgVYOuA2ehKIAThklI+cW4+6AJwy9l0SEzBlAE5iAsJuV8Szig14w8hiEROQuryqA58saSxATrkxP9QW1OHpoxfnvn2479vM8tgBzYxujhnQjDGApybg2ICuz4BMGvAby7rZRPnVapoAAAAASUVORK5CYIIK]]></data>
	</file>
	<file>
	  <filename>/assets/images/foundation/orbit/timer-black.png</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAAH7+Yj7AAAB1UlEQVRYw81YQWcEMRQOZU9l6KkMcy17WoZee13KnErpqT+gP6MMpaeyp7IsQ+lf2WuvpZSelmUZliXNbJPtzORl8jLJbPL4LvHNt1+Sl5e8JZRSInCI1iDdA2DiBpufs0ilHzqwWoOypmpQ/hx0IUgdRBHf4MwBIsESqY5o7JHoiEJthSVq17E9GS1xxokfOuIpdh3XnFh0ES9NkyLHEOPOdUT8SrURCXoHkZsl542hoIiIoQREi76CcPr/4c5WMJZELQWzluDORjAFpnxmKnjNUwba6dhV2jzZ5OGOYc4wIsp9xwuqRRyclFfXggJXQ5zl5yGKQ2ZTHPLOitPzpCSA4MK22uToC82ifDkXTFwLjl0LjmwEI9dr2L6oShvBL8Bdaio4YXhRnJJ1EBe9XsxS8N1FgV02SpWNYM+ZLPlGTknfGNgghJLfGlGoBuvYMjyEbLCOx2MZPOFVJ+N908rAZMU9H9qgKqpu6wdpdOzDYN3oFnGQIl8Gyb5N+G9yVVj4NAg1S1RqnkweDAMYHKFy0aPBC4TBxKfBmcbcp88czBGrd+/DYNz481CNt2PWwYhfYyWySBeh3sUVbkN9LMxDfM1sGG5Ceg9uePKnvl/UE+IwfgEt5tjhwATtOwAAAABJRU5ErkJgggo=]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/</filename>
	  <isdir>1</isdir>
	</file>
	<file>
	  <filename>/assets/javascripts/app.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[OyhmdW5jdGlvbiAoJCwgd2luZG93LCB1bmRlZmluZWQpIHsKICAndXNlIHN0cmljdCc7CgogIHZhciAkZG9jID0gJChkb2N1bWVudCksCiAgICAgIE1vZGVybml6ciA9IHdpbmRvdy5Nb2Rlcm5penI7CgogICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewogICAgJC5mbi5mb3VuZGF0aW9uQWxlcnRzICAgICAgICAgICA/ICRkb2MuZm91bmRhdGlvbkFsZXJ0cygpIDogbnVsbDsKICAgICQuZm4uZm91bmRhdGlvbkJ1dHRvbnMgICAgICAgICAgPyAkZG9jLmZvdW5kYXRpb25CdXR0b25zKCkgOiBudWxsOwogICAgJC5mbi5mb3VuZGF0aW9uQWNjb3JkaW9uICAgICAgICA/ICRkb2MuZm91bmRhdGlvbkFjY29yZGlvbigpIDogbnVsbDsKICAgICQuZm4uZm91bmRhdGlvbk5hdmlnYXRpb24gICAgICAgPyAkZG9jLmZvdW5kYXRpb25OYXZpZ2F0aW9uKCkgOiBudWxsOwogICAgJC5mbi5mb3VuZGF0aW9uVG9wQmFyICAgICAgICAgICA/ICRkb2MuZm91bmRhdGlvblRvcEJhcigpIDogbnVsbDsKICAgICQuZm4uZm91bmRhdGlvbkN1c3RvbUZvcm1zICAgICAgPyAkZG9jLmZvdW5kYXRpb25DdXN0b21Gb3JtcygpIDogbnVsbDsKICAgICQuZm4uZm91bmRhdGlvbk1lZGlhUXVlcnlWaWV3ZXIgPyAkZG9jLmZvdW5kYXRpb25NZWRpYVF1ZXJ5Vmlld2VyKCkgOiBudWxsOwogICAgJC5mbi5mb3VuZGF0aW9uVGFicyAgICAgICAgICAgICA/ICRkb2MuZm91bmRhdGlvblRhYnMoe2NhbGxiYWNrIDogJC5mb3VuZGF0aW9uLmN1c3RvbUZvcm1zLmFwcGVuZEN1c3RvbU1hcmt1cH0pIDogbnVsbDsKICAgICQuZm4uZm91bmRhdGlvblRvb2x0aXBzICAgICAgICAgPyAkZG9jLmZvdW5kYXRpb25Ub29sdGlwcygpIDogbnVsbDsKICAgICQuZm4uZm91bmRhdGlvbk1hZ2VsbGFuICAgICAgICAgPyAkZG9jLmZvdW5kYXRpb25NYWdlbGxhbigpIDogbnVsbDsKICAgICQuZm4uZm91bmRhdGlvbkNsZWFyaW5nICAgICAgICAgPyAkZG9jLmZvdW5kYXRpb25DbGVhcmluZygpIDogbnVsbDsKCiAgICAkLmZuLnBsYWNlaG9sZGVyICAgICAgICAgICAgICAgID8gJCgnaW5wdXQsIHRleHRhcmVhJykucGxhY2Vob2xkZXIoKSA6IG51bGw7CiAgfSk7CgogIC8vIFVOQ09NTUVOVCBUSEUgTElORSBZT1UgV0FOVCBCRUxPVyBJRiBZT1UgV0FOVCBJRTggU1VQUE9SVCBBTkQgQVJFIFVTSU5HIC5ibG9jay1ncmlkcwogIC8vICQoJy5ibG9jay1ncmlkLnR3by11cD5saTpudGgtY2hpbGQoMm4rMSknKS5jc3Moe2NsZWFyOiAnYm90aCd9KTsKICAvLyAkKCcuYmxvY2stZ3JpZC50aHJlZS11cD5saTpudGgtY2hpbGQoM24rMSknKS5jc3Moe2NsZWFyOiAnYm90aCd9KTsKICAvLyAkKCcuYmxvY2stZ3JpZC5mb3VyLXVwPmxpOm50aC1jaGlsZCg0bisxKScpLmNzcyh7Y2xlYXI6ICdib3RoJ30pOwogIC8vICQoJy5ibG9jay1ncmlkLmZpdmUtdXA+bGk6bnRoLWNoaWxkKDVuKzEpJykuY3NzKHtjbGVhcjogJ2JvdGgnfSk7CgogIC8vIEhpZGUgYWRkcmVzcyBiYXIgb24gbW9iaWxlIGRldmljZXMgKGV4Y2VwdCBpZiAjaGFzaCBwcmVzZW50LCBzbyB3ZSBkb24ndCBtZXNzIHVwIGRlZXAgbGlua2luZykuCiAgaWYgKE1vZGVybml6ci50b3VjaCAmJiAhd2luZG93LmxvY2F0aW9uLmhhc2gpIHsKICAgICQod2luZG93KS5sb2FkKGZ1bmN0aW9uICgpIHsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDEpOwogICAgICB9LCAwKTsKICAgIH0pOwogIH0KCn0pKGpRdWVyeSwgdGhpcyk7Cg==]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/foundation.min.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.event.move.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.event.swipe.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[Ly8galF1ZXJ5LmV2ZW50LnN3aXBlCi8vIDAuNQovLyBTdGVwaGVuIEJhbmQKCi8vIERlcGVuZGVuY2llcwovLyBqUXVlcnkuZXZlbnQubW92ZSAxLjIKCi8vIE9uZSBvZiBzd2lwZWxlZnQsIHN3aXBlcmlnaHQsIHN3aXBldXAgb3Igc3dpcGVkb3duIGlzIHRyaWdnZXJlZCBvbgovLyBtb3ZlZW5kLCB3aGVuIHRoZSBtb3ZlIGhhcyBjb3ZlcmVkIGEgdGhyZXNob2xkIHJhdGlvIG9mIHRoZSBkaW1lbnNpb24KLy8gb2YgdGhlIHRhcmdldCBub2RlLCBvciBoYXMgZ29uZSByZWFsbHkgZmFzdC4gVGhyZXNob2xkIGFuZCB2ZWxvY2l0eQovLyBzZW5zaXRpdml0eSBjaGFuZ2VkIHdpdGg6Ci8vCi8vIGpRdWVyeS5ldmVudC5zcGVjaWFsLnN3aXBlLnNldHRpbmdzLnRocmVzaG9sZAovLyBqUXVlcnkuZXZlbnQuc3BlY2lhbC5zd2lwZS5zZXR0aW5ncy5zZW5zaXRpdml0eQoKKGZ1bmN0aW9uIChtb2R1bGUpIHsKCWlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHsKCQkvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUuCgkJZGVmaW5lKFsnanF1ZXJ5J10sIG1vZHVsZSk7Cgl9IGVsc2UgewoJCS8vIEJyb3dzZXIgZ2xvYmFscwoJCW1vZHVsZShqUXVlcnkpOwoJfQp9KShmdW5jdGlvbihqUXVlcnksIHVuZGVmaW5lZCl7Cgl2YXIgYWRkID0galF1ZXJ5LmV2ZW50LmFkZCwKCSAgIAoJICAgIHJlbW92ZSA9IGpRdWVyeS5ldmVudC5yZW1vdmUsCgoJICAgIC8vIEp1c3Qgc3VnYXIsIHNvIHdlIGNhbiBoYXZlIGFyZ3VtZW50cyBpbiB0aGUgc2FtZSBvcmRlciBhcwoJICAgIC8vIGFkZCBhbmQgcmVtb3ZlLgoJICAgIHRyaWdnZXIgPSBmdW5jdGlvbihub2RlLCB0eXBlLCBkYXRhKSB7CgkgICAgCWpRdWVyeS5ldmVudC50cmlnZ2VyKHR5cGUsIGRhdGEsIG5vZGUpOwoJICAgIH0sCgoJICAgIHNldHRpbmdzID0gewoJICAgIAkvLyBSYXRpbyBvZiBkaXN0YW5jZSBvdmVyIHRhcmdldCBmaW5nZXIgbXVzdCB0cmF2ZWwgdG8gYmUKCSAgICAJLy8gY29uc2lkZXJlZCBhIHN3aXBlLgoJICAgIAl0aHJlc2hvbGQ6IDAuNCwKCSAgICAJLy8gRmFzdGVyIGZpbmdlcnMgY2FuIHRyYXZlbCBzaG9ydGVyIGRpc3RhbmNlcyB0byBiZSBjb25zaWRlcmVkCgkgICAgCS8vIHN3aXBlcy4gJ3NlbnNpdGl2aXR5JyBjb250cm9scyBob3cgbXVjaC4gQmlnZ2VyIGlzIHNob3J0ZXIuCgkgICAgCXNlbnNpdGl2aXR5OiA2CgkgICAgfTsKCglmdW5jdGlvbiBtb3ZlZW5kKGUpIHsKCQl2YXIgdywgaCwgZXZlbnQ7CgoJCXcgPSBlLnRhcmdldC5vZmZzZXRXaWR0aDsKCQloID0gZS50YXJnZXQub2Zmc2V0SGVpZ2h0OwoKCQkvLyBDb3B5IG92ZXIgc29tZSB1c2VmdWwgcHJvcGVydGllcyBmcm9tIHRoZSBtb3ZlIGV2ZW50CgkJZXZlbnQgPSB7CgkJCWRpc3RYOiBlLmRpc3RYLAoJCQlkaXN0WTogZS5kaXN0WSwKCQkJdmVsb2NpdHlYOiBlLnZlbG9jaXR5WCwKCQkJdmVsb2NpdHlZOiBlLnZlbG9jaXR5WSwKCQkJZmluZ2VyOiBlLmZpbmdlcgoJCX07CgoJCS8vIEZpbmQgb3V0IHdoaWNoIG9mIHRoZSBmb3VyIGRpcmVjdGlvbnMgd2FzIHN3aXBlZAoJCWlmIChlLmRpc3RYID4gZS5kaXN0WSkgewoJCQlpZiAoZS5kaXN0WCA+IC1lLmRpc3RZKSB7CgkJCQlpZiAoZS5kaXN0WC93ID4gc2V0dGluZ3MudGhyZXNob2xkIHx8IGUudmVsb2NpdHlYICogZS5kaXN0WC93ICogc2V0dGluZ3Muc2Vuc2l0aXZpdHkgPiAxKSB7CgkJCQkJZXZlbnQudHlwZSA9ICdzd2lwZXJpZ2h0JzsKCQkJCQl0cmlnZ2VyKGUuY3VycmVudFRhcmdldCwgZXZlbnQpOwoJCQkJfQoJCQl9CgkJCWVsc2UgewoJCQkJaWYgKC1lLmRpc3RZL2ggPiBzZXR0aW5ncy50aHJlc2hvbGQgfHwgZS52ZWxvY2l0eVkgKiBlLmRpc3RZL3cgKiBzZXR0aW5ncy5zZW5zaXRpdml0eSA+IDEpIHsKCQkJCQlldmVudC50eXBlID0gJ3N3aXBldXAnOwoJCQkJCXRyaWdnZXIoZS5jdXJyZW50VGFyZ2V0LCBldmVudCk7CgkJCQl9CgkJCX0KCQl9CgkJZWxzZSB7CgkJCWlmIChlLmRpc3RYID4gLWUuZGlzdFkpIHsKCQkJCWlmIChlLmRpc3RZL2ggPiBzZXR0aW5ncy50aHJlc2hvbGQgfHwgZS52ZWxvY2l0eVkgKiBlLmRpc3RZL3cgKiBzZXR0aW5ncy5zZW5zaXRpdml0eSA+IDEpIHsKCQkJCQlldmVudC50eXBlID0gJ3N3aXBlZG93bic7CgkJCQkJdHJpZ2dlcihlLmN1cnJlbnRUYXJnZXQsIGV2ZW50KTsKCQkJCX0KCQkJfQoJCQllbHNlIHsKCQkJCWlmICgtZS5kaXN0WC93ID4gc2V0dGluZ3MudGhyZXNob2xkIHx8IGUudmVsb2NpdHlYICogZS5kaXN0WC93ICogc2V0dGluZ3Muc2Vuc2l0aXZpdHkgPiAxKSB7CgkJCQkJZXZlbnQudHlwZSA9ICdzd2lwZWxlZnQnOwoJCQkJCXRyaWdnZXIoZS5jdXJyZW50VGFyZ2V0LCBldmVudCk7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJZnVuY3Rpb24gZ2V0RGF0YShub2RlKSB7CgkJdmFyIGRhdGEgPSBqUXVlcnkuZGF0YShub2RlLCAnZXZlbnRfc3dpcGUnKTsKCQkKCQlpZiAoIWRhdGEpIHsKCQkJZGF0YSA9IHsgY291bnQ6IDAgfTsKCQkJalF1ZXJ5LmRhdGEobm9kZSwgJ2V2ZW50X3N3aXBlJywgZGF0YSk7CgkJfQoJCQoJCXJldHVybiBkYXRhOwoJfQoKCWpRdWVyeS5ldmVudC5zcGVjaWFsLnN3aXBlID0KCWpRdWVyeS5ldmVudC5zcGVjaWFsLnN3aXBlbGVmdCA9CglqUXVlcnkuZXZlbnQuc3BlY2lhbC5zd2lwZXJpZ2h0ID0KCWpRdWVyeS5ldmVudC5zcGVjaWFsLnN3aXBldXAgPQoJalF1ZXJ5LmV2ZW50LnNwZWNpYWwuc3dpcGVkb3duID0gewoJCXNldHVwOiBmdW5jdGlvbiggZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUgKSB7CgkJCXZhciBkYXRhID0gZ2V0RGF0YSh0aGlzKTsKCgkJCS8vIElmIGFub3RoZXIgc3dpcGUgZXZlbnQgaXMgYWxyZWFkeSBzZXR1cCwgZG9uJ3Qgc2V0dXAgYWdhaW4uCgkJCWlmIChkYXRhLmNvdW50KysgPiAwKSB7IHJldHVybjsgfQoKCQkJYWRkKHRoaXMsICdtb3ZlZW5kJywgbW92ZWVuZCk7CgoJCQlyZXR1cm4gdHJ1ZTsKCQl9LAoKCQl0ZWFyZG93bjogZnVuY3Rpb24oKSB7CgkJCXZhciBkYXRhID0gZ2V0RGF0YSh0aGlzKTsKCgkJCS8vIElmIGFub3RoZXIgc3dpcGUgZXZlbnQgaXMgc3RpbGwgc2V0dXAsIGRvbid0IHRlYXJkb3duLgoJCQlpZiAoLS1kYXRhLmNvdW50ID4gMCkgeyByZXR1cm47IH0KCgkJCXJlbW92ZSh0aGlzLCAnbW92ZWVuZCcsIG1vdmVlbmQpOwoKCQkJcmV0dXJuIHRydWU7CgkJfSwKCgkJc2V0dGluZ3M6IHNldHRpbmdzCgl9Owp9KTsK]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.accordion.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[OyhmdW5jdGlvbiAoJCwgd2luZG93LCB1bmRlZmluZWQpewogICd1c2Ugc3RyaWN0JzsKCiAgJC5mbi5mb3VuZGF0aW9uQWNjb3JkaW9uID0gZnVuY3Rpb24gKG9wdGlvbnMpIHsKCiAgICAvLyBEUlkgdXAgdGhlIGxvZ2ljIHVzZWQgdG8gZGV0ZXJtaW5lIGlmIHRoZSBldmVudCBsb2dpYyBzaG91bGQgZXhlY3V0ZS4KICAgIHZhciBoYXNIb3ZlciA9IGZ1bmN0aW9uKGFjY29yZGlvbikgewogICAgICByZXR1cm4gYWNjb3JkaW9uLmhhc0NsYXNzKCdob3ZlcicpICYmICFNb2Rlcm5penIudG91Y2gKICAgIH07CgogICAgJChkb2N1bWVudCkub24oJ21vdXNlZW50ZXInLCAnLmFjY29yZGlvbiBsaScsIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcCA9ICQodGhpcykucGFyZW50KCk7CgogICAgICAgIGlmIChoYXNIb3ZlcihwKSkgewogICAgICAgICAgdmFyIGZseW91dCA9ICQodGhpcykuY2hpbGRyZW4oJy5jb250ZW50JykuZmlyc3QoKTsKCiAgICAgICAgICAkKCcuY29udGVudCcsIHApLm5vdChmbHlvdXQpLmhpZGUoKS5wYXJlbnQoJ2xpJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpOwogICAgICAgICAgZmx5b3V0LnNob3coMCwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBmbHlvdXQucGFyZW50KCdsaScpLmFkZENsYXNzKCdhY3RpdmUnKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgKTsKCiAgICAkKGRvY3VtZW50KS5vbignY2xpY2suZm5kdG4nLCAnLmFjY29yZGlvbiBsaSAudGl0bGUnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGxpID0gJCh0aGlzKS5jbG9zZXN0KCdsaScpLAogICAgICAgICAgICBwID0gbGkucGFyZW50KCk7CgogICAgICAgIGlmKCFoYXNIb3ZlcihwKSkgewogICAgICAgICAgdmFyIGZseW91dCA9IGxpLmNoaWxkcmVuKCcuY29udGVudCcpLmZpcnN0KCk7CgogICAgICAgICAgaWYgKGxpLmhhc0NsYXNzKCdhY3RpdmUnKSkgewogICAgICAgICAgICBwLmZpbmQoJ2xpJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpLmVuZCgpLmZpbmQoJy5jb250ZW50JykuaGlkZSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJCgnLmNvbnRlbnQnLCBwKS5ub3QoZmx5b3V0KS5oaWRlKCkucGFyZW50KCdsaScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTsKICAgICAgICAgICAgZmx5b3V0LnNob3coMCwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIGZseW91dC5wYXJlbnQoJ2xpJykuYWRkQ2xhc3MoJ2FjdGl2ZScpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICApOwoKICB9OwoKfSkoIGpRdWVyeSwgdGhpcyApOwoK]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.alerts.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[OyhmdW5jdGlvbiAoJCwgd2luZG93LCB1bmRlZmluZWQpIHsKICAndXNlIHN0cmljdCc7CiAgCiAgJC5mbi5mb3VuZGF0aW9uQWxlcnRzID0gZnVuY3Rpb24gKG9wdGlvbnMpIHsKICAgIHZhciBzZXR0aW5ncyA9ICQuZXh0ZW5kKHsKICAgICAgY2FsbGJhY2s6ICQubm9vcAogICAgfSwgb3B0aW9ucyk7CiAgICAKICAgICQoZG9jdW1lbnQpLm9uKCJjbGljayIsICIuYWxlcnQtYm94IGEuY2xvc2UiLCBmdW5jdGlvbiAoZSkgewogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICQodGhpcykuY2xvc2VzdCgiLmFsZXJ0LWJveCIpLmZhZGVPdXQoZnVuY3Rpb24gKCkgewogICAgICAgICQodGhpcykucmVtb3ZlKCk7CiAgICAgICAgLy8gRG8gc29tZXRoaW5nIGVsc2UgYWZ0ZXIgdGhlIGFsZXJ0IGNsb3NlcwogICAgICAgIHNldHRpbmdzLmNhbGxiYWNrKCk7CiAgICAgIH0pOwogICAgfSk7CiAgICAKICB9OwoKfSkoalF1ZXJ5LCB0aGlzKTsK]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.buttons.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[OyhmdW5jdGlvbiAoJCwgd2luZG93LCB1bmRlZmluZWQpIHsKICAndXNlIHN0cmljdCc7CgogICQuZm4uZm91bmRhdGlvbkJ1dHRvbnMgPSBmdW5jdGlvbiAob3B0aW9ucykgewogICAgdmFyICRkb2MgPSAkKGRvY3VtZW50KSwKICAgICAgY29uZmlnID0gJC5leHRlbmQoewogICAgICAgIGRyb3Bkb3duQXNUb2dnbGU6ZmFsc2UsCiAgICAgICAgYWN0aXZlQ2xhc3M6J2FjdGl2ZScKICAgICAgfSwgb3B0aW9ucyksCgogICAgLy8gY2xvc2UgYWxsIGRyb3Bkb3ducyBleGNlcHQgZm9yIHRoZSBkcm9wZG93biBwYXNzZWQKICAgICAgY2xvc2VEcm9wZG93bnMgPSBmdW5jdGlvbiAoZHJvcGRvd24pIHsKICAgICAgICAvLyBhbGVydChkcm9wZG93bi5odG1sKCkpOwogICAgICAgICQoJy5idXR0b24uZHJvcGRvd24nKS5maW5kKCd1bCcpLm5vdChkcm9wZG93bikucmVtb3ZlQ2xhc3MoJ3Nob3ctZHJvcGRvd24nKTsKICAgICAgfSwKICAgIC8vIHJlc2V0IGFsbCB0b2dnbGUgc3RhdGVzIGV4Y2VwdCBmb3IgdGhlIGJ1dHRvbiBwYXNzZWQKICAgICAgcmVzZXRUb2dnbGVzID0gZnVuY3Rpb24gKGJ1dHRvbikgewogICAgICAgIC8vIGFsZXJ0KGJ1dHRvbi5odG1sKCkpOwogICAgICAgIHZhciBidXR0b25zID0gJCgnLmJ1dHRvbi5kcm9wZG93bicpLm5vdChidXR0b24pOwogICAgICAgIGJ1dHRvbnMuYWRkKCQoJz4gc3Bhbi4nICsgY29uZmlnLmFjdGl2ZUNsYXNzLCBidXR0b25zKSkucmVtb3ZlQ2xhc3MoY29uZmlnLmFjdGl2ZUNsYXNzKTsKICAgICAgfTsKCiAgICAvLyBQcmV2ZW50IGV2ZW50IHByb3BhZ2F0aW9uIG9uIGRpc2FibGVkIGJ1dHRvbnMKICAgICRkb2Mub24oJ2NsaWNrLmZuZHRuJywgJy5idXR0b24uZGlzYWJsZWQnLCBmdW5jdGlvbiAoZSkgewogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICB9KTsKCiAgICAkKCcuYnV0dG9uLmRyb3Bkb3duID4gdWwnLCB0aGlzKS5hZGRDbGFzcygnbm8taG92ZXInKTsKCiAgICAvLyByZXNldCBvdGhlciBhY3RpdmUgc3RhdGVzCiAgICAkZG9jLm9uKCdjbGljay5mbmR0bicsICcuYnV0dG9uLmRyb3Bkb3duOm5vdCguc3BsaXQpLCAuYnV0dG9uLmRyb3Bkb3duLnNwbGl0IHNwYW4nLCBmdW5jdGlvbiAoZSkgewogICAgICB2YXIgJGVsID0gJCh0aGlzKSwKICAgICAgICBidXR0b24gPSAkZWwuY2xvc2VzdCgnLmJ1dHRvbi5kcm9wZG93bicpLAogICAgICAgIGRyb3Bkb3duID0gJCgnPiB1bCcsIGJ1dHRvbik7CgogICAgICAgIC8vIElmIHRoZSBjbGljayBpcyByZWdpc3RlcmVkIG9uIGFuIGFjdHVhbCBsaW5rIG9yIG9uIGJ1dHRvbiBlbGVtZW50IHRoZW4gZG8gbm90IHByZXZlbnREZWZhdWx0IHdoaWNoIHN0b3BzIHRoZSBicm93c2VyIGZyb20gZm9sbG93aW5nIHRoZSBsaW5rCiAgICAgICAgaWYgKFsiQSIsICJCVVRUT04iXS5pbmRleE9mKGUudGFyZ2V0Lm5vZGVOYW1lKSA9PSAtMSl7CiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgfQoKICAgICAgLy8gY2xvc2Ugb3RoZXIgZHJvcGRvd25zCiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGNsb3NlRHJvcGRvd25zKGNvbmZpZy5kcm9wZG93bkFzVG9nZ2xlID8gJycgOiBkcm9wZG93bik7CiAgICAgICAgZHJvcGRvd24udG9nZ2xlQ2xhc3MoJ3Nob3ctZHJvcGRvd24nKTsKCiAgICAgICAgaWYgKGNvbmZpZy5kcm9wZG93bkFzVG9nZ2xlKSB7CiAgICAgICAgICByZXNldFRvZ2dsZXMoYnV0dG9uKTsKICAgICAgICAgICRlbC50b2dnbGVDbGFzcyhjb25maWcuYWN0aXZlQ2xhc3MpOwogICAgICAgIH0KICAgICAgfSwgMCk7CiAgICB9KTsKCiAgICAvLyBjbG9zZSBhbGwgZHJvcGRvd25zIGFuZCBkZWFjdGl2YXRlIGFsbCBidXR0b25zCiAgICAkZG9jLm9uKCdjbGljay5mbmR0bicsICdib2R5LCBodG1sJywgZnVuY3Rpb24gKGUpIHsKICAgICAgaWYgKHVuZGVmaW5lZCA9PSBlLm9yaWdpbmFsRXZlbnQpIHsgcmV0dXJuOyB9CiAgICAgIC8vIGNoZWNrIG9yaWdpbmFsIHRhcmdldCBpbnN0ZWFkIG9mIHN0b3BwaW5nIGV2ZW50IHByb3BhZ2F0aW9uIHRvIHBsYXkgbmljZSB3aXRoIG90aGVyIGV2ZW50cwogICAgICBpZiAoISQoZS5vcmlnaW5hbEV2ZW50LnRhcmdldCkuaXMoJy5idXR0b24uZHJvcGRvd246bm90KC5zcGxpdCksIC5idXR0b24uZHJvcGRvd24uc3BsaXQgc3BhbicpKSB7CiAgICAgICAgY2xvc2VEcm9wZG93bnMoKTsKICAgICAgICBpZiAoY29uZmlnLmRyb3Bkb3duQXNUb2dnbGUpIHsKICAgICAgICAgIHJlc2V0VG9nZ2xlcygpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CgogICAgLy8gUG9zaXRpb25pbmcgdGhlIEZseW91dCBMaXN0CiAgICB2YXIgbm9ybWFsQnV0dG9uSGVpZ2h0ICA9ICQoJy5idXR0b24uZHJvcGRvd246bm90KC5sYXJnZSk6bm90KC5zbWFsbCk6bm90KC50aW55KTp2aXNpYmxlJywgdGhpcykub3V0ZXJIZWlnaHQoKSAtIDEsCiAgICAgICAgbGFyZ2VCdXR0b25IZWlnaHQgICA9ICQoJy5idXR0b24ubGFyZ2UuZHJvcGRvd246dmlzaWJsZScsIHRoaXMpLm91dGVySGVpZ2h0KCkgLSAxLAogICAgICAgIHNtYWxsQnV0dG9uSGVpZ2h0ICAgPSAkKCcuYnV0dG9uLnNtYWxsLmRyb3Bkb3duOnZpc2libGUnLCB0aGlzKS5vdXRlckhlaWdodCgpIC0gMSwKICAgICAgICB0aW55QnV0dG9uSGVpZ2h0ICAgID0gJCgnLmJ1dHRvbi50aW55LmRyb3Bkb3duOnZpc2libGUnLCB0aGlzKS5vdXRlckhlaWdodCgpIC0gMTsKCiAgICAkKCcuYnV0dG9uLmRyb3Bkb3duOm5vdCgubGFyZ2UpOm5vdCguc21hbGwpOm5vdCgudGlueSkgPiB1bCcsIHRoaXMpLmNzcygndG9wJywgbm9ybWFsQnV0dG9uSGVpZ2h0KTsKICAgICQoJy5idXR0b24uZHJvcGRvd24ubGFyZ2UgPiB1bCcsIHRoaXMpLmNzcygndG9wJywgbGFyZ2VCdXR0b25IZWlnaHQpOwogICAgJCgnLmJ1dHRvbi5kcm9wZG93bi5zbWFsbCA+IHVsJywgdGhpcykuY3NzKCd0b3AnLCBzbWFsbEJ1dHRvbkhlaWdodCk7CiAgICAkKCcuYnV0dG9uLmRyb3Bkb3duLnRpbnkgPiB1bCcsIHRoaXMpLmNzcygndG9wJywgdGlueUJ1dHRvbkhlaWdodCk7CgogICAgJCgnLmJ1dHRvbi5kcm9wZG93bi51cDpub3QoLmxhcmdlKTpub3QoLnNtYWxsKTpub3QoLnRpbnkpID4gdWwnLCB0aGlzKS5jc3MoJ3RvcCcsICdhdXRvJykuY3NzKCdib3R0b20nLCBub3JtYWxCdXR0b25IZWlnaHQgLSAyKTsKICAgICQoJy5idXR0b24uZHJvcGRvd24udXAubGFyZ2UgPiB1bCcsIHRoaXMpLmNzcygndG9wJywgJ2F1dG8nKS5jc3MoJ2JvdHRvbScsIGxhcmdlQnV0dG9uSGVpZ2h0IC0gMik7CiAgICAkKCcuYnV0dG9uLmRyb3Bkb3duLnVwLnNtYWxsID4gdWwnLCB0aGlzKS5jc3MoJ3RvcCcsICdhdXRvJykuY3NzKCdib3R0b20nLCBzbWFsbEJ1dHRvbkhlaWdodCAtIDIpOwogICAgJCgnLmJ1dHRvbi5kcm9wZG93bi51cC50aW55ID4gdWwnLCB0aGlzKS5jc3MoJ3RvcCcsICdhdXRvJykuY3NzKCdib3R0b20nLCB0aW55QnV0dG9uSGVpZ2h0IC0gMik7CgogIH07Cgp9KSggalF1ZXJ5LCB0aGlzICk7Cg==]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.clearing.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.forms.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.joyride.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.magellan.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[LyoKICogalF1ZXJ5IEZvdW5kYXRpb24gTWFnZWxsYW4gMC4wLjEKICogaHR0cDovL2ZvdW5kYXRpb24uenVyYi5jb20KICogQ29weXJpZ2h0IDIwMTIsIFpVUkIKICogRnJlZSB0byB1c2UgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocAoqLwoKLypqc2xpbnQgdW5wYXJhbTogdHJ1ZSwgYnJvd3NlcjogdHJ1ZSwgaW5kZW50OiAyICovCgo7KGZ1bmN0aW9uICgkLCB3aW5kb3csIHVuZGVmaW5lZCkgewogICd1c2Ugc3RyaWN0JzsKCiAgJC5mbi5mb3VuZGF0aW9uTWFnZWxsYW4gPSBmdW5jdGlvbihvcHRpb25zKSB7CiAgICB2YXIgJHdpbmRvdyA9ICQod2luZG93KSwKICAJCSRkb2N1bWVudCA9ICQoZG9jdW1lbnQpLAogIAkJJGZpeGVkTWFnZWxsYW4gPSAkKCdbZGF0YS1tYWdlbGxhbi1leHBlZGl0aW9uPWZpeGVkXScpLAogICAgCWRlZmF1bHRzID0gewoJICAgICAgdGhyZXNob2xkOiAoJGZpeGVkTWFnZWxsYW4ubGVuZ3RoKSA/ICRmaXhlZE1hZ2VsbGFuLm91dGVySGVpZ2h0KHRydWUpIDogMCwKCSAgICAgIGFjdGl2ZUNsYXNzOiAnYWN0aXZlJwoJICAgIH0sCgkJb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBkZWZhdWx0cywgb3B0aW9ucyk7CgkKICAgIC8vIEluZGljYXRlIHdlIGhhdmUgYXJyaXZlZCBhdCBhIGRlc3RpbmF0aW9uCiAgICAkZG9jdW1lbnQub24oJ21hZ2VsbGFuLmFycml2YWwnLCAnW2RhdGEtbWFnZWxsYW4tYXJyaXZhbF0nLCBmdW5jdGlvbihlKSB7CgkJdmFyICRkZXN0aW5hdGlvbiA9ICQodGhpcyksCiAgICAgIAkJJGV4cGVkaXRpb24gPSAkZGVzdGluYXRpb24uY2xvc2VzdCgnW2RhdGEtbWFnZWxsYW4tZXhwZWRpdGlvbl0nKSwKCQkJYWN0aXZlQ2xhc3MgPSAkZXhwZWRpdGlvbi5hdHRyKCdkYXRhLW1hZ2VsbGFuLWFjdGl2ZS1jbGFzcycpIHx8IG9wdGlvbnMuYWN0aXZlQ2xhc3M7CiAgICAgICRkZXN0aW5hdGlvbgogICAgICAgIC5jbG9zZXN0KCdbZGF0YS1tYWdlbGxhbi1leHBlZGl0aW9uXScpCiAgICAgICAgLmZpbmQoJ1tkYXRhLW1hZ2VsbGFuLWFycml2YWxdJykKICAgICAgICAubm90KHRoaXMpCiAgICAgICAgLnJlbW92ZUNsYXNzKGFjdGl2ZUNsYXNzKTsKICAgICAgJGRlc3RpbmF0aW9uLmFkZENsYXNzKGFjdGl2ZUNsYXNzKTsKICAgIH0pOwoKICAgIC8vIFNldCBzdGFydGluZyBwb2ludCBhcyB0aGUgY3VycmVudCBkZXN0aW5hdGlvbgogICAgdmFyICRleHBlZGl0aW9uID0gJCgnW2RhdGEtbWFnZWxsYW4tZXhwZWRpdGlvbl0nKTsKICAgICRleHBlZGl0aW9uLmZpbmQoJ1tkYXRhLW1hZ2VsbGFuLWFycml2YWxdOmZpcnN0JykKICAgICAgLmFkZENsYXNzKCRleHBlZGl0aW9uLmF0dHIoJ2RhdGEtbWFnZWxsYW4tYWN0aXZlLWNsYXNzJykgfHwgb3B0aW9ucy5hY3RpdmVDbGFzcyk7CgogICAgLy8gVXBkYXRlIGZpeGVkIHBvc2l0aW9uCiAgICAkZml4ZWRNYWdlbGxhbi5vbignbWFnZWxsYW4udXBkYXRlLXBvc2l0aW9uJywgZnVuY3Rpb24oKXsKICAgICAgdmFyICRlbCA9ICQodGhpcyk7CiAgICAgICRlbC5kYXRhKCJtYWdlbGxhbi1maXhlZC1wb3NpdGlvbiIsIiIpOwogICAgICAkZWwuZGF0YSgibWFnZWxsYW4tdG9wLW9mZnNldCIsICIiKTsKICAgIH0pCiAgICAudHJpZ2dlcignbWFnZWxsYW4udXBkYXRlLXBvc2l0aW9uJyk7CgogICAgJHdpbmRvdy5vbigncmVzaXplLm1hZ2VsbGFuJywgZnVuY3Rpb24oKSB7CiAgICAgICRmaXhlZE1hZ2VsbGFuLnRyaWdnZXIoJ21hZ2VsbGFuLnVwZGF0ZS1wb3NpdGlvbicpOwogICAgfSk7CiAgICAKICAgICR3aW5kb3cub24oJ3Njcm9sbC5tYWdlbGxhbicsIGZ1bmN0aW9uKCkgewogICAgICB2YXIgd2luZG93U2Nyb2xsVG9wID0gJHdpbmRvdy5zY3JvbGxUb3AoKTsKICAgICAgJGZpeGVkTWFnZWxsYW4uZWFjaChmdW5jdGlvbigpIHsKICAgICAgICB2YXIgJGV4cGVkaXRpb24gPSAkKHRoaXMpOwogICAgICAgIGlmICgkZXhwZWRpdGlvbi5kYXRhKCJtYWdlbGxhbi10b3Atb2Zmc2V0IikgPT09ICIiKSB7CiAgICAgICAgICAkZXhwZWRpdGlvbi5kYXRhKCJtYWdlbGxhbi10b3Atb2Zmc2V0IiwgJGV4cGVkaXRpb24ub2Zmc2V0KCkudG9wKTsKICAgICAgICB9CiAgICAgICAgdmFyIGZpeGVkX3Bvc2l0aW9uID0gKHdpbmRvd1Njcm9sbFRvcCArIG9wdGlvbnMudGhyZXNob2xkKSA+ICRleHBlZGl0aW9uLmRhdGEoIm1hZ2VsbGFuLXRvcC1vZmZzZXQiKTsKICAgICAgICBpZiAoJGV4cGVkaXRpb24uZGF0YSgibWFnZWxsYW4tZml4ZWQtcG9zaXRpb24iKSAhPSBmaXhlZF9wb3NpdGlvbikgewogICAgICAgICAgJGV4cGVkaXRpb24uZGF0YSgibWFnZWxsYW4tZml4ZWQtcG9zaXRpb24iLCBmaXhlZF9wb3NpdGlvbik7CiAgICAgICAgICBpZiAoZml4ZWRfcG9zaXRpb24pIHsKICAgICAgICAgICAgJGV4cGVkaXRpb24uY3NzKHtwb3NpdGlvbjoiZml4ZWQiLCB0b3A6MH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJGV4cGVkaXRpb24uY3NzKHtwb3NpdGlvbjoiIiwgdG9wOiIifSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwoKICAgIC8vIERldGVybWluZSB3aGVuIGEgZGVzdGluYXRpb24gaGFzIGJlZW4gcmVhY2hlZCwgYWgweSEKICAgIHZhciAkbGFzdERlc3RpbmF0aW9uID0gJCgnW2RhdGEtbWFnZWxsYW4tZGVzdGluYXRpb25dOmxhc3QnKTsKICAgICR3aW5kb3cub24oJ3Njcm9sbC5tYWdlbGxhbicsIGZ1bmN0aW9uKGUpewoJICB2YXIgd2luZG93U2Nyb2xsVG9wID0gJHdpbmRvdy5zY3JvbGxUb3AoKSwKCQkgIHNjcm9sbHRvcFBsdXNIZWlnaHQgPSB3aW5kb3dTY3JvbGxUb3ArJHdpbmRvdy5vdXRlckhlaWdodCh0cnVlKSwKCQkgIGxhc3REZXN0aW5hdGlvblRvcCA9IE1hdGguY2VpbCgkbGFzdERlc3RpbmF0aW9uLm9mZnNldCgpLnRvcCk7CiAgICAgICQoJ1tkYXRhLW1hZ2VsbGFuLWRlc3RpbmF0aW9uXScpLmVhY2goZnVuY3Rpb24oKXsKICAgICAgICB2YXIgJGRlc3RpbmF0aW9uID0gJCh0aGlzKSwKICAgICAgICAgICAgZGVzdGluYXRpb25fbmFtZSA9ICRkZXN0aW5hdGlvbi5hdHRyKCdkYXRhLW1hZ2VsbGFuLWRlc3RpbmF0aW9uJyksCiAgICAgICAgICAgIHRvcE9mZnNldCA9ICRkZXN0aW5hdGlvbi5vZmZzZXQoKS50b3AgLSB3aW5kb3dTY3JvbGxUb3A7CiAgICAgICAgaWYgKHRvcE9mZnNldCA8PSBvcHRpb25zLnRocmVzaG9sZCkgewogICAgICAgICAgJCgnW2RhdGEtbWFnZWxsYW4tYXJyaXZhbD0nICsgZGVzdGluYXRpb25fbmFtZSArICddJykudHJpZ2dlcignbWFnZWxsYW4uYXJyaXZhbCcpOwogICAgICAgIH0KICAgICAgICAvLyBJbiBsYXJnZSBzY3JlZW5zIHdlIG1heSBoaXQgdGhlIGJvdHRvbSBvZiB0aGUgcGFnZSBhbmQgZG9udCByZWFjaCB0aGUgdG9wIG9mIHRoZSBsYXN0IG1hZ2VsbGFuLWRlc3RpbmF0aW9uLCBzbyBsZXRzIGZvcmNlIGl0CiAgICAgICAgaWYgKHNjcm9sbHRvcFBsdXNIZWlnaHQgPj0gJGRvY3VtZW50Lm91dGVySGVpZ2h0KHRydWUpICYmIGxhc3REZXN0aW5hdGlvblRvcCA+IHdpbmRvd1Njcm9sbFRvcCAmJiBsYXN0RGVzdGluYXRpb25Ub3AgPCBzY3JvbGx0b3BQbHVzSGVpZ2h0KSB7CiAgICAgICAgCSAkKCdbZGF0YS1tYWdlbGxhbi1hcnJpdmFsXTpsYXN0JykudHJpZ2dlcignbWFnZWxsYW4uYXJyaXZhbCcpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KTsKICB9Owp9KGpRdWVyeSwgdGhpcykpOwo=]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.mediaQueryToggle.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[OyhmdW5jdGlvbiAoJCwgd2luZG93LCB1bmRlZmluZWQpIHsKICAndXNlIHN0cmljdCc7CiAgCiAgJC5mbi5mb3VuZGF0aW9uTWVkaWFRdWVyeVZpZXdlciA9IGZ1bmN0aW9uIChvcHRpb25zKSB7CiAgICB2YXIgc2V0dGluZ3MgPSAkLmV4dGVuZChvcHRpb25zLHt0b2dnbGVLZXk6Nzd9KSwgLy8gUHJlc3MgJ00nCiAgICAgICAgJGRvYyA9ICQoZG9jdW1lbnQpOwoKICAgICRkb2Mub24oImtleXVwLm1lZGlhUXVlcnlWaWV3ZXIiLCAiOmlucHV0IiwgZnVuY3Rpb24gKGUpewogICAgICBpZiAoZS53aGljaCA9PT0gc2V0dGluZ3MudG9nZ2xlS2V5KSB7CiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgfQogICAgfSk7CiAgICAkZG9jLm9uKCJrZXl1cC5tZWRpYVF1ZXJ5Vmlld2VyIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgdmFyICRtcVZpZXdlciA9ICQoJyNmcXYnKTsKCiAgICAgIGlmIChlLndoaWNoID09PSBzZXR0aW5ncy50b2dnbGVLZXkpIHsgCiAgICAgICAgaWYgKCRtcVZpZXdlci5sZW5ndGggPiAwKSB7CiAgICAgICAgICAkbXFWaWV3ZXIucmVtb3ZlKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICQoJ2JvZHknKS5wcmVwZW5kKCc8ZGl2IGlkPSJmcXYiIHN0eWxlPSJwb3NpdGlvbjpmaXhlZDt0b3A6NHB4O2xlZnQ6NHB4O3otaW5kZXg6OTk5O2NvbG9yOiNmZmY7Ij48cCBzdHlsZT0iZm9udC1zaXplOjEycHg7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLDAuNzUpO3BhZGRpbmc6NXB4O21hcmdpbi1ib3R0b206MXB4O2xpbmUtaGVpZ2h0OjEuMjsiPjxzcGFuIGNsYXNzPSJsZWZ0Ij5NZWRpYTo8L3NwYW4+IDxzcGFuIHN0eWxlPSJmb250LXdlaWdodDpib2xkOyIgY2xhc3M9InNob3ctZm9yLXhsYXJnZSI+RXh0cmEgTGFyZ2U8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OmJvbGQ7IiBjbGFzcz0ic2hvdy1mb3ItbGFyZ2UiPkxhcmdlPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXdlaWdodDpib2xkOyIgY2xhc3M9InNob3ctZm9yLW1lZGl1bSI+TWVkaXVtPC9zcGFuPjxzcGFuIHN0eWxlPSJmb250LXdlaWdodDpib2xkOyIgY2xhc3M9InNob3ctZm9yLXNtYWxsIj5TbWFsbDwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6Ym9sZDsiIGNsYXNzPSJzaG93LWZvci1sYW5kc2NhcGUiPkxhbmRzY2FwZTwvc3Bhbj48c3BhbiBzdHlsZT0iZm9udC13ZWlnaHQ6Ym9sZDsiIGNsYXNzPSJzaG93LWZvci1wb3J0cmFpdCI+UG9ydHJhaXQ8L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OmJvbGQ7IiBjbGFzcz0ic2hvdy1mb3ItdG91Y2giPlRvdWNoPC9zcGFuPjwvcD48L2Rpdj4nKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwoKICB9OwoKfSkoalF1ZXJ5LCB0aGlzKTsK]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.navigation.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[OyhmdW5jdGlvbiAoJCwgd2luZG93LCB1bmRlZmluZWQpIHsKICAndXNlIHN0cmljdCc7CgogICQuZm4uZm91bmRhdGlvbk5hdmlnYXRpb24gPSBmdW5jdGlvbiAob3B0aW9ucykgewoKICAgIHZhciBsb2NrTmF2QmFyID0gZmFsc2U7CiAgICAvLyBXaW5kb3dzIFBob25lLCBzYWRseSwgZG9lcyBub3QgcmVnaXN0ZXIgdG91Y2ggZXZlbnRzIDooCiAgICBpZiAoTW9kZXJuaXpyLnRvdWNoIHx8IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1dpbmRvd3MgUGhvbmUvaSkpIHsKICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrLmZuZHRuIHRvdWNoc3RhcnQuZm5kdG4nLCAnLm5hdi1iYXIgYS5mbHlvdXQtdG9nZ2xlJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgdmFyIGZseW91dCA9ICQodGhpcykuc2libGluZ3MoJy5mbHlvdXQnKS5maXJzdCgpOwogICAgICAgIGlmIChsb2NrTmF2QmFyID09PSBmYWxzZSkgewogICAgICAgICAgJCgnLm5hdi1iYXIgLmZseW91dCcpLm5vdChmbHlvdXQpLnNsaWRlVXAoNTAwKTsKICAgICAgICAgIGZseW91dC5zbGlkZVRvZ2dsZSg1MDAsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbG9ja05hdkJhciA9IGZhbHNlOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIGxvY2tOYXZCYXIgPSB0cnVlOwogICAgICB9KTsKICAgICAgJCgnLm5hdi1iYXI+bGkuaGFzLWZseW91dCcsIHRoaXMpLmFkZENsYXNzKCdpcy10b3VjaCcpOwogICAgfSBlbHNlIHsKICAgICAgJCgnLm5hdi1iYXI+bGkuaGFzLWZseW91dCcsIHRoaXMpLm9uKCdtb3VzZWVudGVyIG1vdXNlbGVhdmUnLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGlmIChlLnR5cGUgPT0gJ21vdXNlZW50ZXInKSB7CiAgICAgICAgICAkKCcubmF2LWJhcicpLmZpbmQoJy5mbHlvdXQnKS5oaWRlKCk7CiAgICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCcuZmx5b3V0Jykuc2hvdygpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGUudHlwZSA9PSAnbW91c2VsZWF2ZScpIHsKICAgICAgICAgIHZhciBmbHlvdXQgPSAkKHRoaXMpLmNoaWxkcmVuKCcuZmx5b3V0JyksCiAgICAgICAgICAgICAgaW5wdXRzID0gZmx5b3V0LmZpbmQoJ2lucHV0JyksCiAgICAgICAgICAgICAgaGFzRm9jdXMgPSBmdW5jdGlvbiAoaW5wdXRzKSB7CiAgICAgICAgICAgICAgICB2YXIgZm9jdXM7CiAgICAgICAgICAgICAgICBpZiAoaW5wdXRzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgaW5wdXRzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKCI6Zm9jdXMiKSkgewogICAgICAgICAgICAgICAgICAgICAgZm9jdXMgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIHJldHVybiBmb2N1czsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgfTsKCiAgICAgICAgICBpZiAoIWhhc0ZvY3VzKGlucHV0cykpIHsKICAgICAgICAgICAgJCh0aGlzKS5jaGlsZHJlbignLmZseW91dCcpLmhpZGUoKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICB9KTsKICAgIH0KCiAgfTsKCn0pKCBqUXVlcnksIHRoaXMgKTsK]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.orbit.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.reveal.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[LyoKICogalF1ZXJ5IFJldmVhbCBQbHVnaW4gMS4xCiAqIHd3dy5aVVJCLmNvbQogKiBDb3B5cmlnaHQgMjAxMCwgWlVSQgogKiBGcmVlIHRvIHVzZSB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwCiovCi8qZ2xvYmFscyBqUXVlcnkgKi8KCihmdW5jdGlvbiAoJCkgewogICd1c2Ugc3RyaWN0JzsKICAvLwogIC8vIEdsb2JhbCB2YXJpYWJsZS4KICAvLyBIZWxwcyB1cyBkZXRlcm1pbmUgaWYgdGhlIGN1cnJlbnQgbW9kYWwgaXMgYmVpbmcgcXVldWVkIGZvciBkaXNwbGF5LgogIC8vCiAgdmFyIG1vZGFsUXVldWVkID0gZmFsc2U7CgogIC8vCiAgLy8gQmluZCB0aGUgbGl2ZSAnY2xpY2snIGV2ZW50IHRvIGFsbCBhbmNob3IgZWxlbW5ldHMgd2l0aCB0aGUgZGF0YS1yZXZlYWwtaWQgYXR0cmlidXRlLgogIC8vCiAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ2FbZGF0YS1yZXZlYWwtaWRdJywgZnVuY3Rpb24gKCBldmVudCApIHsKICAgIC8vCiAgICAvLyBQcmV2ZW50IGRlZmF1bHQgYWN0aW9uIG9mIHRoZSBldmVudC4KICAgIC8vCiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgLy8KICAgIC8vIEdldCB0aGUgY2xpY2tlZCBhbmNob3IgZGF0YS1yZXZlYWwtaWQgYXR0cmlidXRlIHZhbHVlLgogICAgLy8KICAgIHZhciBtb2RhbExvY2F0aW9uID0gJCggdGhpcyApLmF0dHIoICdkYXRhLXJldmVhbC1pZCcgKTsKICAgIC8vCiAgICAvLyBGaW5kIHRoZSBlbGVtZW50IHdpdGggdGhhdCBtb2RhbExvY2F0aW9uIGlkIGFuZCBjYWxsIHRoZSByZXZlYWwgcGx1Z2luLgogICAgLy8KICAgICQoICcjJyArIG1vZGFsTG9jYXRpb24gKS5yZXZlYWwoICQoIHRoaXMgKS5kYXRhKCkgKTsKCiAgfSk7CgogIC8qKgogICAqIEBtb2R1bGUgcmV2ZWFsCiAgICogQHByb3BlcnR5IHtPYmplY3R9IFtvcHRpb25zXSBSZXZlYWwgb3B0aW9ucwogICAqLwogICQuZm4ucmV2ZWFsID0gZnVuY3Rpb24gKCBvcHRpb25zICkgewogICAgICAvKgogICAgICAgKiBDYWNoZSB0aGUgZG9jdW1lbnQgb2JqZWN0LgogICAgICAgKi8KICAgIHZhciAkZG9jID0gJCggZG9jdW1lbnQgKSwKICAgICAgICAvKgogICAgICAgICAqIERlZmF1bHQgcHJvcGVydHkgdmFsdWVzLgogICAgICAgICAqLwogICAgICAgIGRlZmF1bHRzID0gewogICAgICAgICAgLyoqCiAgICAgICAgICAgKiBQb3NzaWJsZSBvcHRpb25zOiBmYWRlLCBmYWRlQW5kUG9wLCBub25lCiAgICAgICAgICAgKgogICAgICAgICAgICogQHByb3BlcnR5IGFuaW1hdGlvbgogICAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgICAqIEBkZWZhdWx0IGZhZGVBbmRQb3AKICAgICAgICAgICAqLwogICAgICAgICAgYW5pbWF0aW9uOiAnZmFkZUFuZFBvcCcsCiAgICAgICAgICAvKioKICAgICAgICAgICAqIFNwZWVkIGF0IHdoaWNoIHRoZSByZXZlYWwgc2hvdWxkIHNob3cuIEhvdyBmYXN0IGFuaW10aW9ucyBhcmUuCiAgICAgICAgICAgKgogICAgICAgICAgICogQHByb3BlcnR5IGFuaW1hdGlvblNwZWVkCiAgICAgICAgICAgKiBAdHlwZSB7SW50ZWdlcn0KICAgICAgICAgICAqIEBkZWZhdWx0IDMwMAogICAgICAgICAgICovCiAgICAgICAgICBhbmltYXRpb25TcGVlZDogMzAwLAogICAgICAgICAgLyoqCiAgICAgICAgICAgKiBTaG91bGQgdGhlIG1vZGFsIGNsb3NlIHdoZW4gdGhlIGJhY2tncm91bmQgaXMgY2xpY2tlZD8KICAgICAgICAgICAqCiAgICAgICAgICAgKiBAcHJvcGVydHkgY2xvc2VPbkJhY2tncm91bmRDbGljawogICAgICAgICAgICogQHR5cGUge0Jvb2xlYW59CiAgICAgICAgICAgKiBAZGVmYXVsdCB0cnVlCiAgICAgICAgICAgKi8KICAgICAgICAgIGNsb3NlT25CYWNrZ3JvdW5kQ2xpY2s6IHRydWUsCiAgICAgICAgICAvKioKICAgICAgICAgICAqIFNwZWNpZnkgYSBjbGFzcyBuYW1lIGZvciB0aGUgJ2Nsb3NlIG1vZGFsJyBlbGVtZW50LgogICAgICAgICAgICogVGhpcyBlbGVtZW50IHdpbGwgY2xvc2UgYW4gb3BlbiBtb2RhbC4KICAgICAgICAgICAqCiAgICAgICAgICAgQGV4YW1wbGUKICAgICAgICAgICA8YSBocmVmPScjY2xvc2UnIGNsYXNzPSdjbG9zZS1yZXZlYWwtbW9kYWwnPkNsb3NlIE1lPC9hPgogICAgICAgICAgICoKICAgICAgICAgICAqIEBwcm9wZXJ0eSBkaXNtaXNzTW9kYWxDbGFzcwogICAgICAgICAgICogQHR5cGUge1N0cmluZ30KICAgICAgICAgICAqIEBkZWZhdWx0IGNsb3NlLXJldmVhbC1tb2RhbAogICAgICAgICAgICovCiAgICAgICAgICBkaXNtaXNzTW9kYWxDbGFzczogJ2Nsb3NlLXJldmVhbC1tb2RhbCcsCiAgICAgICAgICAvKioKICAgICAgICAgICAqIFNwZWNpZnkgYSBjYWxsYmFjayBmdW5jdGlvbiB0aGF0IHRyaWdnZXJzICdiZWZvcmUnIHRoZSBtb2RhbCBvcGVucy4KICAgICAgICAgICAqCiAgICAgICAgICAgKiBAcHJvcGVydHkgb3BlbgogICAgICAgICAgICogQHR5cGUge0Z1bmN0aW9ufQogICAgICAgICAgICogQGRlZmF1bHQgZnVuY3Rpb24oKXt9CiAgICAgICAgICAgKi8KICAgICAgICAgIG9wZW46ICQubm9vcCwKICAgICAgICAgIC8qKgogICAgICAgICAgICogU3BlY2lmeSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgdHJpZ2dlcnMgJ2FmdGVyJyB0aGUgbW9kYWwgaXMgb3BlbmVkLgogICAgICAgICAgICoKICAgICAgICAgICAqIEBwcm9wZXJ0eSBvcGVuZWQKICAgICAgICAgICAqIEB0eXBlIHtGdW5jdGlvbn0KICAgICAgICAgICAqIEBkZWZhdWx0IGZ1bmN0aW9uKCl7fQogICAgICAgICAgICovCiAgICAgICAgICBvcGVuZWQ6ICQubm9vcCwKICAgICAgICAgIC8qKgogICAgICAgICAgICogU3BlY2lmeSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgdHJpZ2dlcnMgJ2JlZm9yZScgdGhlIG1vZGFsIHByZXBhcmVzIHRvIGNsb3NlLgogICAgICAgICAgICoKICAgICAgICAgICAqIEBwcm9wZXJ0eSBjbG9zZQogICAgICAgICAgICogQHR5cGUge0Z1bmN0aW9ufQogICAgICAgICAgICogQGRlZmF1bHQgZnVuY3Rpb24oKXt9CiAgICAgICAgICAgKi8KICAgICAgICAgIGNsb3NlOiAkLm5vb3AsCiAgICAgICAgICAvKioKICAgICAgICAgICAqIFNwZWNpZnkgYSBjYWxsYmFjayBmdW5jdGlvbiB0aGF0IHRyaWdnZXJzICdhZnRlcicgdGhlIG1vZGFsIGlzIGNsb3NlZC4KICAgICAgICAgICAqCiAgICAgICAgICAgKiBAcHJvcGVydHkgY2xvc2VkCiAgICAgICAgICAgKiBAdHlwZSB7RnVuY3Rpb259CiAgICAgICAgICAgKiBAZGVmYXVsdCBmdW5jdGlvbigpe30KICAgICAgICAgICAqLwogICAgICAgICAgY2xvc2VkOiAkLm5vb3AKICAgICAgICB9CiAgICA7CiAgICAvLwogICAgLy8gRXh0ZW5kIHRoZSBkZWZhdWx0IG9wdGlvbnMuCiAgICAvLyBUaGlzIHJlcGxhY2VzIHRoZSBwYXNzZWQgaW4gb3B0aW9uIChvcHRpb25zKSB2YWx1ZXMgd2l0aCBkZWZhdWx0IHZhbHVlcy4KICAgIC8vCiAgICBvcHRpb25zID0gJC5leHRlbmQoIHt9LCBkZWZhdWx0cywgb3B0aW9ucyApOwoKICAgIC8vCiAgICAvLyBBcHBseSB0aGUgcGx1Z2luIGZ1bmN0aW9uYWxpdHkgdG8gZWFjaCBlbGVtZW50IGluIHRoZSBqUXVlcnkgY29sbGVjdGlvbi4KICAgIC8vCiAgICByZXR1cm4gdGhpcy5ub3QoJy5yZXZlYWwtbW9kYWwub3BlbicpLmVhY2goIGZ1bmN0aW9uICgpIHsKICAgICAgICAvLwogICAgICAgIC8vIENhY2hlIHRoZSBtb2RhbCBlbGVtZW50CiAgICAgICAgLy8KICAgICAgdmFyIG1vZGFsID0gJCggdGhpcyApLAogICAgICAgIC8vCiAgICAgICAgLy8gR2V0IHRoZSBjdXJyZW50IGNzcyAndG9wJyBwcm9wZXJ0eSB2YWx1ZSBpbiBkZWNpbWFsIGZvcm1hdC4KICAgICAgICAvLwogICAgICAgIHRvcE1lYXN1cmUgPSBwYXJzZUludCggbW9kYWwuY3NzKCAndG9wJyApLCAxMCApLAogICAgICAgIC8vCiAgICAgICAgLy8gQ2FsY3VsYXRlIHRoZSB0b3Agb2Zmc2V0LgogICAgICAgIC8vCiAgICAgICAgdG9wT2Zmc2V0ID0gbW9kYWwuaGVpZ2h0KCkgKyB0b3BNZWFzdXJlLAogICAgICAgIC8vCiAgICAgICAgLy8gSGVscHMgZGV0ZXJtaW5lIGlmIHRoZSBtb2RhbCBpcyBsb2NrZWQuCiAgICAgICAgLy8gVGhpcyB3YXkgd2Uga2VlcCB0aGUgbW9kYWwgZnJvbSB0cmlnZ2VyaW5nIHdoaWxlIGl0J3MgaW4gdGhlIG1pZGRsZSBvZiBhbmltYXRpbmcuCiAgICAgICAgLy8KICAgICAgICBsb2NrZWQgPSBmYWxzZSwKICAgICAgICAvLwogICAgICAgIC8vIEdldCB0aGUgbW9kYWwgYmFja2dyb3VuZCBlbGVtZW50LgogICAgICAgIC8vCiAgICAgICAgbW9kYWxCZyA9ICQoICcucmV2ZWFsLW1vZGFsLWJnJyApLAogICAgICAgIC8vCiAgICAgICAgLy8gU2hvdyBtb2RhbCBwcm9wZXJ0aWVzCiAgICAgICAgLy8KICAgICAgICBjc3NPcHRzID0gewogICAgICAgICAgLy8KICAgICAgICAgIC8vIFVzZWQsIHdoZW4gd2Ugc2hvdyB0aGUgbW9kYWwuCiAgICAgICAgICAvLwogICAgICAgICAgb3BlbiA6IHsKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gU2V0IHRoZSAndG9wJyBwcm9wZXJ0eSB0byB0aGUgZG9jdW1lbnQgc2Nyb2xsIG1pbnVzIHRoZSBjYWxjdWxhdGVkIHRvcCBvZmZzZXQuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgICd0b3AnOiAwLAogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBPcGFjaXR5IGdldHMgc2V0IHRvIDAuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgICdvcGFjaXR5JzogMCwKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gU2hvdyB0aGUgbW9kYWwKICAgICAgICAgICAgLy8KICAgICAgICAgICAgJ3Zpc2liaWxpdHknOiAndmlzaWJsZScsCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIEVuc3VyZSBpdCdzIGRpc3BsYXllZCBhcyBhIGJsb2NrIGVsZW1lbnQuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgICdkaXNwbGF5JzogJ2Jsb2NrJwogICAgICAgICAgfSwKICAgICAgICAgIC8vCiAgICAgICAgICAvLyBVc2VkLCB3aGVuIHdlIGhpZGUgdGhlIG1vZGFsLgogICAgICAgICAgLy8KICAgICAgICAgIGNsb3NlIDogewogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBTZXQgdGhlIGRlZmF1bHQgJ3RvcCcgcHJvcGVydHkgdmFsdWUuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgICd0b3AnOiB0b3BNZWFzdXJlLAogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBIYXMgZnVsbCBvcGFjaXR5LgogICAgICAgICAgICAvLwogICAgICAgICAgICAnb3BhY2l0eSc6IDEsCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIEhpZGUgdGhlIG1vZGFsCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgICd2aXNpYmlsaXR5JzogJ2hpZGRlbicsCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIEVuc3VyZSB0aGUgZWxtZW50IGlzIGhpZGRlbi4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgJ2Rpc3BsYXknOiAnbm9uZScKICAgICAgICAgIH0KCiAgICAgICAgfSwKICAgICAgICAvLwogICAgICAgIC8vIEluaXRpYWwgY2xvc2VCdXR0b24gdmFyaWFibGUuCiAgICAgICAgLy8KICAgICAgICAkY2xvc2VCdXR0b24KICAgICAgOwoKICAgICAgLy8KICAgICAgLy8gRG8gd2UgaGF2ZSBhIG1vZGFsIGJhY2tncm91bmQgZWxlbWVudD8KICAgICAgLy8KICAgICAgaWYgKCBtb2RhbEJnLmxlbmd0aCA9PT0gMCApIHsKICAgICAgICAvLwogICAgICAgIC8vIE5vIHdlIGRvbid0LiBTbywgbGV0J3MgY3JlYXRlIG9uZS4KICAgICAgICAvLwogICAgICAgIG1vZGFsQmcgPSAkKCAnPGRpdiAvPicsIHsgJ2NsYXNzJyA6ICdyZXZlYWwtbW9kYWwtYmcnIH0gKQogICAgICAgIC8vCiAgICAgICAgLy8gVGhlbiBpbnNlcnQgaXQgYWZ0ZXIgdGhlIG1vZGFsIGVsZW1lbnQuCiAgICAgICAgLy8KICAgICAgICAuaW5zZXJ0QWZ0ZXIoIG1vZGFsICk7CiAgICAgICAgLy8KICAgICAgICAvLyBOb3csIGZhZGUgaXQgb3V0IGEgYml0LgogICAgICAgIC8vCiAgICAgICAgbW9kYWxCZy5mYWRlVG8oICdmYXN0JywgMC44ICk7CiAgICAgIH0KCiAgICAgIC8vCiAgICAgIC8vIEhlbHBlciBNZXRob2RzCiAgICAgIC8vCgogICAgICAvKioKICAgICAgICogVW5sb2NrIHRoZSBtb2RhbCBmb3IgYW5pbWF0aW9uLgogICAgICAgKgogICAgICAgKiBAbWV0aG9kIHVubG9ja01vZGFsCiAgICAgICAqLwogICAgICBmdW5jdGlvbiB1bmxvY2tNb2RhbCgpIHsKICAgICAgICBsb2NrZWQgPSBmYWxzZTsKICAgICAgfQoKICAgICAgLyoqCiAgICAgICAqIExvY2sgdGhlIG1vZGFsIHRvIHByZXZlbnQgZnVydGhlciBhbmltYXRpb24uCiAgICAgICAqCiAgICAgICAqIEBtZXRob2QgbG9ja01vZGFsCiAgICAgICAqLwogICAgICBmdW5jdGlvbiBsb2NrTW9kYWwoKSB7CiAgICAgICAgbG9ja2VkID0gdHJ1ZTsKICAgICAgfQoKICAgICAgLyoqCiAgICAgICAqIENsb3NlcyBhbGwgb3BlbiBtb2RhbHMuCiAgICAgICAqCiAgICAgICAqIEBtZXRob2QgY2xvc2VPcGVuTW9kYWwKICAgICAgICovCiAgICAgIGZ1bmN0aW9uIGNsb3NlT3Blbk1vZGFscygpIHsKICAgICAgICAvLwogICAgICAgIC8vIEdldCBhbGwgcmV2ZWFsLW1vZGFsIGVsZW1lbnRzIHdpdGggdGhlIC5vcGVuIGNsYXNzLgogICAgICAgIC8vCiAgICAgICAgdmFyICRvcGVuTW9kYWxzID0gJCggIi5yZXZlYWwtbW9kYWwub3BlbiIgKTsKICAgICAgICAvLwogICAgICAgIC8vIERvIHdlIGhhdmUgbW9kYWxzIHRvIGNsb3NlPwogICAgICAgIC8vCiAgICAgICAgaWYgKCAkb3Blbk1vZGFscy5sZW5ndGggPT09IDEgKSB7CiAgICAgICAgICAvLwogICAgICAgICAgLy8gU2V0IHRoZSBtb2RhbHMgZm9yIGFuaW1hdGlvbiBxdWV1aW5nLgogICAgICAgICAgLy8KICAgICAgICAgIG1vZGFsUXVldWVkID0gdHJ1ZTsKICAgICAgICAgIC8vCiAgICAgICAgICAvLyBUcmlnZ2VyIHRoZSBtb2RhbCBjbG9zZSBldmVudC4KICAgICAgICAgIC8vCiAgICAgICAgICAkb3Blbk1vZGFscy50cmlnZ2VyKCAicmV2ZWFsOmNsb3NlIiApOwogICAgICAgIH0KCiAgICAgIH0KICAgICAgLyoqCiAgICAgICAqIEFuaW1hdGVzIHRoZSBtb2RhbCBvcGVuaW5nLgogICAgICAgKiBIYW5kbGVzIHRoZSBtb2RhbCAnb3BlbicgZXZlbnQuCiAgICAgICAqCiAgICAgICAqIEBtZXRob2Qgb3BlbkFuaW1hdGlvbgogICAgICAgKi8KICAgICAgZnVuY3Rpb24gb3BlbkFuaW1hdGlvbigpIHsKICAgICAgICAvLwogICAgICAgIC8vIEZpcnN0LCBkZXRlcm1pbmUgaWYgd2UncmUgaW4gdGhlIG1pZGRsZSBvZiBhbmltYXRpb24uCiAgICAgICAgLy8KICAgICAgICBpZiAoICFsb2NrZWQgKSB7CiAgICAgICAgICAvLwogICAgICAgICAgLy8gV2UncmUgbm90IGFuaW1hdGluZywgbGV0J3MgbG9jayB0aGUgbW9kYWwgZm9yIGFuaW1hdGlvbi4KICAgICAgICAgIC8vCiAgICAgICAgICBsb2NrTW9kYWwoKTsKICAgICAgICAgIC8vCiAgICAgICAgICAvLyBDbG9zZSBhbnkgb3BlbmVkIG1vZGFscy4KICAgICAgICAgIC8vCiAgICAgICAgICBjbG9zZU9wZW5Nb2RhbHMoKTsKICAgICAgICAgIC8vCiAgICAgICAgICAvLyBOb3csIGFkZCB0aGUgb3BlbiBjbGFzcyB0byB0aGlzIG1vZGFsLgogICAgICAgICAgLy8KICAgICAgICAgIG1vZGFsLmFkZENsYXNzKCAib3BlbiIgKTsKCiAgICAgICAgICAvLwogICAgICAgICAgLy8gQXJlIHdlIGV4ZWN1dGluZyB0aGUgJ2ZhZGVBbmRQb3AnIGFuaW1hdGlvbj8KICAgICAgICAgIC8vCiAgICAgICAgICBpZiAoIG9wdGlvbnMuYW5pbWF0aW9uID09PSAiZmFkZUFuZFBvcCIgKSB7CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIFllcywgd2UncmUgZG9pbmcgdGhlICdmYWRlQW5kUG9wJyBhbmltYXRpb24uCiAgICAgICAgICAgIC8vIE9rYXksIHNldCB0aGUgbW9kYWwgY3NzIHByb3BlcnRpZXMuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIFNldCB0aGUgJ3RvcCcgcHJvcGVydHkgdG8gdGhlIGRvY3VtZW50IHNjcm9sbCBtaW51cyB0aGUgY2FsY3VsYXRlZCB0b3Agb2Zmc2V0LgogICAgICAgICAgICAvLwogICAgICAgICAgICBjc3NPcHRzLm9wZW4udG9wID0gJGRvYy5zY3JvbGxUb3AoKSAtIHRvcE9mZnNldDsKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gRmxpcCB0aGUgb3BhY2l0eSB0byAwLgogICAgICAgICAgICAvLwogICAgICAgICAgICBjc3NPcHRzLm9wZW4ub3BhY2l0eSA9IDA7CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIFNldCB0aGUgY3NzIG9wdGlvbnMuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIG1vZGFsLmNzcyggY3NzT3B0cy5vcGVuICk7CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIEZhZGUgaW4gdGhlIGJhY2tncm91bmQgZWxlbWVudCwgYXQgaGFsZiB0aGUgc3BlZWQgb2YgdGhlIG1vZGFsIGVsZW1lbnQuCiAgICAgICAgICAgIC8vIFNvLCBmYXN0ZXIgdGhhbiB0aGUgbW9kYWwgZWxlbWVudC4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgbW9kYWxCZy5mYWRlSW4oIG9wdGlvbnMuYW5pbWF0aW9uU3BlZWQgLyAyICk7CgogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBMZXQncyBkZWxheSB0aGUgbmV4dCBhbmltYXRpb24gcXVldWUuCiAgICAgICAgICAgIC8vIFdlJ2xsIHdhaXQgdW50aWwgdGhlIGJhY2tncm91bmQgZWxlbWVudCBpcyBmYWRlZCBpbi4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgbW9kYWwuZGVsYXkoIG9wdGlvbnMuYW5pbWF0aW9uU3BlZWQgLyAyICkKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gQW5pbWF0ZSB0aGUgZm9sbG93aW5nIGNzcyBwcm9wZXJ0aWVzLgogICAgICAgICAgICAvLwogICAgICAgICAgICAuYW5pbWF0ZSggewogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLy8gU2V0IHRoZSAndG9wJyBwcm9wZXJ0eSB0byB0aGUgZG9jdW1lbnQgc2Nyb2xsIHBsdXMgdGhlIGNhbGN1bGF0ZWQgdG9wIG1lYXN1cmUuCiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAidG9wIjogJGRvYy5zY3JvbGxUb3AoKSArIHRvcE1lYXN1cmUgKyAncHgnLAogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLy8gU2V0IGl0IHRvIGZ1bGwgb3BhY2l0eS4KICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgICJvcGFjaXR5IjogMQoKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLyoKICAgICAgICAgICAgICogRmFkZSBzcGVlZC4KICAgICAgICAgICAgICovCiAgICAgICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uU3BlZWQsCiAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAqIEVuZCBvZiBhbmltYXRpb24gY2FsbGJhY2suCiAgICAgICAgICAgICAqLwogICAgICAgICAgICBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHRoZSBtb2RhbCByZXZlYWw6b3BlbmVkIGV2ZW50LgogICAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkIHRyaWdnZXIgdGhlIGZ1bmN0aW9ucyBzZXQgaW4gdGhlIG9wdGlvbnMub3BlbmVkIHByb3BlcnR5LgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgbW9kYWwudHJpZ2dlciggJ3JldmVhbDpvcGVuZWQnICk7CgogICAgICAgICAgICB9KTsgLy8gZW5kIG9mIGFuaW1hdGUuCgogICAgICAgICAgfSAvLyBlbmQgaWYgJ2ZhZGVBbmRQb3AnCgogICAgICAgICAgLy8KICAgICAgICAgIC8vIEFyZSBleGVjdXRpbmcgdGhlICdmYWRlJyBhbmltYXRpb24/CiAgICAgICAgICAvLwogICAgICAgICAgaWYgKCBvcHRpb25zLmFuaW1hdGlvbiA9PT0gImZhZGUiICkgewogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBZZXMsIHdlcmUgZXhlY3V0aW5nICdmYWRlJy4KICAgICAgICAgICAgLy8gT2theSwgbGV0J3Mgc2V0IHRoZSBtb2RhbCBwcm9wZXJ0aWVzLgogICAgICAgICAgICAvLwogICAgICAgICAgICBjc3NPcHRzLm9wZW4udG9wID0gJGRvYy5zY3JvbGxUb3AoKSArIHRvcE1lYXN1cmU7CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIEZsaXAgdGhlIG9wYWNpdHkgdG8gMC4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgY3NzT3B0cy5vcGVuLm9wYWNpdHkgPSAwOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBTZXQgdGhlIGNzcyBvcHRpb25zLgogICAgICAgICAgICAvLwogICAgICAgICAgICBtb2RhbC5jc3MoIGNzc09wdHMub3BlbiApOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBGYWRlIGluIHRoZSBtb2RhbCBiYWNrZ3JvdW5kIGF0IGhhbGYgdGhlIHNwZWVkIG9mIHRoZSBtb2RhbC4KICAgICAgICAgICAgLy8gU28sIGZhc3RlciB0aGFuIG1vZGFsLgogICAgICAgICAgICAvLwogICAgICAgICAgICBtb2RhbEJnLmZhZGVJbiggb3B0aW9ucy5hbmltYXRpb25TcGVlZCAvIDIgKTsKCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIERlbGF5IHRoZSBtb2RhbCBhbmltYXRpb24uCiAgICAgICAgICAgIC8vIFdhaXQgdGlsbCB0aGUgbW9kYWwgYmFja2dyb3VuZCBpcyBkb25lIGFuaW1hdGluZy4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgbW9kYWwuZGVsYXkoIG9wdGlvbnMuYW5pbWF0aW9uU3BlZWQgLyAyICkKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gTm93IGFuaW1hdGUgdGhlIG1vZGFsLgogICAgICAgICAgICAvLwogICAgICAgICAgICAuYW5pbWF0ZSggewogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLy8gU2V0IHRvIGZ1bGwgb3BhY2l0eS4KICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgICJvcGFjaXR5IjogMQogICAgICAgICAgICB9LAoKICAgICAgICAgICAgLyoKICAgICAgICAgICAgICogQW5pbWF0aW9uIHNwZWVkLgogICAgICAgICAgICAgKi8KICAgICAgICAgICAgb3B0aW9ucy5hbmltYXRpb25TcGVlZCwKCiAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAqIEVuZCBvZiBhbmltYXRpb24gY2FsbGJhY2suCiAgICAgICAgICAgICAqLwogICAgICAgICAgICBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHRoZSBtb2RhbCByZXZlYWw6b3BlbmVkIGV2ZW50LgogICAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkIHRyaWdnZXIgdGhlIGZ1bmN0aW9ucyBzZXQgaW4gdGhlIG9wdGlvbnMub3BlbmVkIHByb3BlcnR5LgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgbW9kYWwudHJpZ2dlciggJ3JldmVhbDpvcGVuZWQnICk7CgogICAgICAgICAgICB9KTsKCiAgICAgICAgICB9IC8vIGVuZCBpZiAnZmFkZScKCiAgICAgICAgICAvLwogICAgICAgICAgLy8gQXJlIHdlIG5vdCBhbmltYXRpbmc/CiAgICAgICAgICAvLwogICAgICAgICAgaWYgKCBvcHRpb25zLmFuaW1hdGlvbiA9PT0gIm5vbmUiICkgewogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBXZSdyZSBub3QgYW5pbWF0aW5nLgogICAgICAgICAgICAvLyBPa2F5LCBsZXQncyBzZXQgdGhlIG1vZGFsIGNzcyBwcm9wZXJ0aWVzLgogICAgICAgICAgICAvLwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBTZXQgdGhlIHRvcCBwcm9wZXJ0eS4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgY3NzT3B0cy5vcGVuLnRvcCA9ICRkb2Muc2Nyb2xsVG9wKCkgKyB0b3BNZWFzdXJlOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBTZXQgdGhlIG9wYWNpdHkgcHJvcGVydHkgdG8gZnVsbCBvcGFjaXR5LCBzaW5jZSB3ZSdyZSBub3QgZmFkaW5nIChhbmltYXRpbmcpLgogICAgICAgICAgICAvLwogICAgICAgICAgICBjc3NPcHRzLm9wZW4ub3BhY2l0eSA9IDE7CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIFNldCB0aGUgY3NzIHByb3BlcnR5LgogICAgICAgICAgICAvLwogICAgICAgICAgICBtb2RhbC5jc3MoIGNzc09wdHMub3BlbiApOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBTaG93IHRoZSBtb2RhbCBCYWNrZ3JvdW5kLgogICAgICAgICAgICAvLwogICAgICAgICAgICBtb2RhbEJnLmNzcyggeyAiZGlzcGxheSI6ICJibG9jayIgfSApOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBUcmlnZ2VyIHRoZSBtb2RhbCBvcGVuZWQgZXZlbnQuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIG1vZGFsLnRyaWdnZXIoICdyZXZlYWw6b3BlbmVkJyApOwoKICAgICAgICAgIH0gLy8gZW5kIGlmIGFuaW1hdGluZyAnbm9uZScKCiAgICAgICAgfS8vIGVuZCBpZiAhbG9ja2VkCgogICAgICB9Ly8gZW5kIG9wZW5BbmltYXRpb24KCgogICAgICBmdW5jdGlvbiBvcGVuVmlkZW9zKCkgewogICAgICAgIHZhciB2aWRlbyA9IG1vZGFsLmZpbmQoJy5mbGV4LXZpZGVvJyksCiAgICAgICAgICAgIGlmcmFtZSA9IHZpZGVvLmZpbmQoJ2lmcmFtZScpOwogICAgICAgIGlmIChpZnJhbWUubGVuZ3RoID4gMCkgewogICAgICAgICAgaWZyYW1lLmF0dHIoInNyYyIsIGlmcmFtZS5kYXRhKCJzcmMiKSk7CiAgICAgICAgICB2aWRlby5mYWRlSW4oMTAwKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIC8vCiAgICAgIC8vIEJpbmQgdGhlIHJldmVhbCAnb3BlbicgZXZlbnQuCiAgICAgIC8vIFdoZW4gdGhlIGV2ZW50IGlzIHRyaWdnZXJlZCwgb3BlbkFuaW1hdGlvbiBpcyBjYWxsZWQKICAgICAgLy8gYWxvbmcgd2l0aCBhbnkgZnVuY3Rpb24gc2V0IGluIHRoZSBvcHRpb25zLm9wZW4gcHJvcGVydHkuCiAgICAgIC8vCiAgICAgIG1vZGFsLmJpbmQoICdyZXZlYWw6b3Blbi5yZXZlYWwnLCBvcGVuQW5pbWF0aW9uICk7CiAgICAgIG1vZGFsLmJpbmQoICdyZXZlYWw6b3Blbi5yZXZlYWwnLCBvcGVuVmlkZW9zKTsKCiAgICAgIC8qKgogICAgICAgKiBDbG9zZXMgdGhlIG1vZGFsIGVsZW1lbnQocykKICAgICAgICogSGFuZGxlcyB0aGUgbW9kYWwgJ2Nsb3NlJyBldmVudC4KICAgICAgICoKICAgICAgICogQG1ldGhvZCBjbG9zZUFuaW1hdGlvbgogICAgICAgKi8KICAgICAgZnVuY3Rpb24gY2xvc2VBbmltYXRpb24oKSB7CiAgICAgICAgLy8KICAgICAgICAvLyBGaXJzdCwgZGV0ZXJtaW5lIGlmIHdlJ3JlIGluIHRoZSBtaWRkbGUgb2YgYW5pbWF0aW9uLgogICAgICAgIC8vCiAgICAgICAgaWYgKCAhbG9ja2VkICkgewogICAgICAgICAgLy8KICAgICAgICAgIC8vIFdlJ3JlIG5vdCBhbmltYXRpbmcsIGxldCdzIGxvY2sgdGhlIG1vZGFsIGZvciBhbmltYXRpb24uCiAgICAgICAgICAvLwogICAgICAgICAgbG9ja01vZGFsKCk7CiAgICAgICAgICAvLwogICAgICAgICAgLy8gQ2xlYXIgdGhlIG1vZGFsIG9mIHRoZSBvcGVuIGNsYXNzLgogICAgICAgICAgLy8KICAgICAgICAgIG1vZGFsLnJlbW92ZUNsYXNzKCAib3BlbiIgKTsKCiAgICAgICAgICAvLwogICAgICAgICAgLy8gQXJlIHdlIHVzaW5nIHRoZSAnZmFkZUFuZFBvcCcgYW5pbWF0aW9uPwogICAgICAgICAgLy8KICAgICAgICAgIGlmICggb3B0aW9ucy5hbmltYXRpb24gPT09ICJmYWRlQW5kUG9wIiApIHsKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gWWVzLCBva2F5LCBsZXQncyBzZXQgdGhlIGFuaW1hdGlvbiBwcm9wZXJ0aWVzLgogICAgICAgICAgICAvLwogICAgICAgICAgICBtb2RhbC5hbmltYXRlKCB7CiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAvLyBTZXQgdGhlIHRvcCBwcm9wZXJ0eSB0byB0aGUgZG9jdW1lbnQgc2Nyb2xsVG9wIG1pbnVzIGNhbGN1bGF0ZWQgdG9wT2Zmc2V0LgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgInRvcCI6ICAkZG9jLnNjcm9sbFRvcCgpIC0gdG9wT2Zmc2V0ICsgJ3B4JywKICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgIC8vIEZhZGUgdGhlIG1vZGFsIG91dCwgYnkgdXNpbmcgdGhlIG9wYWNpdHkgcHJvcGVydHkuCiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAib3BhY2l0eSI6IDAKCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAqIEZhZGUgc3BlZWQuCiAgICAgICAgICAgICAqLwogICAgICAgICAgICBvcHRpb25zLmFuaW1hdGlvblNwZWVkIC8gMiwKICAgICAgICAgICAgLyoKICAgICAgICAgICAgICogRW5kIG9mIGFuaW1hdGlvbiBjYWxsYmFjay4KICAgICAgICAgICAgICovCiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgIC8vIFNldCB0aGUgY3NzIGhpZGRlbiBvcHRpb25zLgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgbW9kYWwuY3NzKCBjc3NPcHRzLmNsb3NlICk7CgogICAgICAgICAgICB9KTsKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gSXMgdGhlIG1vZGFsIGFuaW1hdGlvbiBxdWV1ZWQ/CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIGlmICggIW1vZGFsUXVldWVkICkgewogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLy8gT2gsIHRoZSBtb2RhbChzKSBhcmUgbWlkIGFuaW1hdGluZy4KICAgICAgICAgICAgICAvLyBMZXQncyBkZWxheSB0aGUgYW5pbWF0aW9uIHF1ZXVlLgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgbW9kYWxCZy5kZWxheSggb3B0aW9ucy5hbmltYXRpb25TcGVlZCApCiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAvLyBGYWRlIG91dCB0aGUgbW9kYWwgYmFja2dyb3VuZC4KICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgIC5mYWRlT3V0KAogICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICogQW5pbWF0aW9uIHNwZWVkLgogICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uU3BlZWQsCiAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICogRW5kIG9mIGFuaW1hdGlvbiBjYWxsYmFjay4KICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHRoZSBtb2RhbCAnY2xvc2VkJyBldmVudC4KICAgICAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkIHRyaWdnZXIgYW55IG1ldGhvZCBzZXQgaW4gdGhlIG9wdGlvbnMuY2xvc2VkIHByb3BlcnR5LgogICAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAgIG1vZGFsLnRyaWdnZXIoICdyZXZlYWw6Y2xvc2VkJyApOwoKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAvLyBXZSdyZSBub3QgbWlkIHF1ZXVlLgogICAgICAgICAgICAgIC8vIFRyaWdnZXIgdGhlIG1vZGFsICdjbG9zZWQnIGV2ZW50LgogICAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkIHRyaWdnZXIgYW55IG1ldGhvZCBzZXQgaW4gdGhlIG9wdGlvbnMuY2xvc2VkIHByb3BldHkuCiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICBtb2RhbC50cmlnZ2VyKCAncmV2ZWFsOmNsb3NlZCcgKTsKCiAgICAgICAgICAgIH0gLy8gZW5kIGlmICFtb2RhbFF1ZXVlZAoKICAgICAgICAgIH0gLy8gZW5kIGlmIGFuaW1hdGlvbiAnZmFkZUFuZFBvcCcKCiAgICAgICAgICAvLwogICAgICAgICAgLy8gQXJlIHdlIHVzaW5nIHRoZSAnZmFkZScgYW5pbWF0aW9uLgogICAgICAgICAgLy8KICAgICAgICAgIGlmICggb3B0aW9ucy5hbmltYXRpb24gPT09ICJmYWRlIiApIHsKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gWWVzLCB3ZSdyZSB1c2luZyB0aGUgJ2ZhZGUnIGFuaW1hdGlvbi4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgbW9kYWwuYW5pbWF0ZSggeyAib3BhY2l0eSIgOiAwIH0sCiAgICAgICAgICAgICAgLyoKICAgICAgICAgICAgICAgKiBBbmltYXRpb24gc3BlZWQuCiAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgb3B0aW9ucy5hbmltYXRpb25TcGVlZCwKICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICAqIEVuZCBvZiBhbmltYXRpb24gY2FsbGJhY2suCiAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLy8gU2V0IHRoZSBjc3MgY2xvc2Ugb3B0aW9ucy4KICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgIG1vZGFsLmNzcyggY3NzT3B0cy5jbG9zZSApOwoKICAgICAgICAgICAgfSk7IC8vIGVuZCBhbmltYXRlCgogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyBBcmUgd2UgbWlkIGFuaW1hdGluZyB0aGUgbW9kYWwocyk/CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIGlmICggIW1vZGFsUXVldWVkICkgewogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLy8gT2gsIHRoZSBtb2RhbChzKSBhcmUgbWlkIGFuaW1hdGluZy4KICAgICAgICAgICAgICAvLyBMZXQncyBkZWxheSB0aGUgYW5pbWF0aW9uIHF1ZXVlLgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgbW9kYWxCZy5kZWxheSggb3B0aW9ucy5hbmltYXRpb25TcGVlZCApCiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAvLyBMZXQncyBmYWRlIG91dCB0aGUgbW9kYWwgYmFja2dyb3VuZCBlbGVtZW50LgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLmZhZGVPdXQoCiAgICAgICAgICAgICAgLyoKICAgICAgICAgICAgICAgKiBBbmltYXRpb24gc3BlZWQuCiAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgb3B0aW9ucy5hbmltYXRpb25TcGVlZCwKICAgICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICAgKiBFbmQgb2YgYW5pbWF0aW9uIGNhbGxiYWNrLgogICAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgICAgIC8vIFRyaWdnZXIgdGhlIG1vZGFsICdjbG9zZWQnIGV2ZW50LgogICAgICAgICAgICAgICAgICAvLyBUaGlzIHNob3VsZCB0cmlnZ2VyIGFueSBtZXRob2Qgc2V0IGluIHRoZSBvcHRpb25zLmNsb3NlZCBwcm9wZXR5LgogICAgICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgICAgICBtb2RhbC50cmlnZ2VyKCAncmV2ZWFsOmNsb3NlZCcgKTsKCiAgICAgICAgICAgICAgfSk7IC8vIGVuZCBmYWRlT3V0CgogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgLy8gV2UncmUgbm90IG1pZCBxdWV1ZS4KICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHRoZSBtb2RhbCAnY2xvc2VkJyBldmVudC4KICAgICAgICAgICAgICAvLyBUaGlzIHNob3VsZCB0cmlnZ2VyIGFueSBtZXRob2Qgc2V0IGluIHRoZSBvcHRpb25zLmNsb3NlZCBwcm9wZXR5LgogICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgbW9kYWwudHJpZ2dlciggJ3JldmVhbDpjbG9zZWQnICk7CgogICAgICAgICAgICB9IC8vIGVuZCBpZiAhbW9kYWxRdWV1ZWQKCiAgICAgICAgICB9IC8vIGVuZCBpZiBhbmltYXRpb24gJ2ZhZGUnCgogICAgICAgICAgLy8KICAgICAgICAgIC8vIEFyZSB3ZSBub3QgYW5pbWF0aW5nPwogICAgICAgICAgLy8KICAgICAgICAgIGlmICggb3B0aW9ucy5hbmltYXRpb24gPT09ICJub25lIiApIHsKICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gV2UncmUgbm90IGFuaW1hdGluZy4KICAgICAgICAgICAgLy8gU2V0IHRoZSBtb2RhbCBjbG9zZSBjc3Mgb3B0aW9ucy4KICAgICAgICAgICAgLy8KICAgICAgICAgICAgbW9kYWwuY3NzKCBjc3NPcHRzLmNsb3NlICk7CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vIElzIHRoZSBtb2RhbCBpbiB0aGUgbWlkZGxlIG9mIGFuIGFuaW1hdGlvbiBxdWV1ZT8KICAgICAgICAgICAgLy8KICAgICAgICAgICAgaWYgKCAhbW9kYWxRdWV1ZWQgKSB7CiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAvLyBJdCdzIG5vdCBtaWQgcXVldWV1LiBKdXN0IGhpZGUgaXQuCiAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICBtb2RhbEJnLmNzcyggeyAnZGlzcGxheSc6ICdub25lJyB9ICk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8KICAgICAgICAgICAgLy8gVHJpZ2dlciB0aGUgbW9kYWwgJ2Nsb3NlZCcgZXZlbnQuCiAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkIHRyaWdnZXIgYW55IG1ldGhvZCBzZXQgaW4gdGhlIG9wdGlvbnMuY2xvc2VkIHByb3BldHkuCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIG1vZGFsLnRyaWdnZXIoICdyZXZlYWw6Y2xvc2VkJyApOwoKICAgICAgICAgIH0gLy8gZW5kIGlmIG5vdCBhbmltYXRpbmcKICAgICAgICAgIC8vCiAgICAgICAgICAvLyBSZXNldCB0aGUgbW9kYWxRdWV1ZWQgdmFyaWFibGUuCiAgICAgICAgICAvLwogICAgICAgICAgbW9kYWxRdWV1ZWQgPSBmYWxzZTsKICAgICAgICB9IC8vIGVuZCBpZiAhbG9ja2VkCgogICAgICB9IC8vIGVuZCBjbG9zZUFuaW1hdGlvbgoKICAgICAgLyoqCiAgICAgICAqIERlc3Ryb3lzIHRoZSBtb2RhbCBhbmQgaXQncyBldmVudHMuCiAgICAgICAqCiAgICAgICAqIEBtZXRob2QgZGVzdHJveQogICAgICAgKi8KICAgICAgZnVuY3Rpb24gZGVzdHJveSgpIHsKICAgICAgICAvLwogICAgICAgIC8vIFVuYmluZCBhbGwgLnJldmVhbCBldmVudHMgZnJvbSB0aGUgbW9kYWwuCiAgICAgICAgLy8KICAgICAgICBtb2RhbC51bmJpbmQoICcucmV2ZWFsJyApOwogICAgICAgIC8vCiAgICAgICAgLy8gVW5iaW5kIGFsbCAucmV2ZWFsIGV2ZW50cyBmcm9tIHRoZSBtb2RhbCBiYWNrZ3JvdW5kLgogICAgICAgIC8vCiAgICAgICAgbW9kYWxCZy51bmJpbmQoICcucmV2ZWFsJyApOwogICAgICAgIC8vCiAgICAgICAgLy8gVW5iaW5kIGFsbCAucmV2ZWFsIGV2ZW50cyBmcm9tIHRoZSBtb2RhbCAnY2xvc2UnIGJ1dHRvbi4KICAgICAgICAvLwogICAgICAgICRjbG9zZUJ1dHRvbi51bmJpbmQoICcucmV2ZWFsJyApOwogICAgICAgIC8vCiAgICAgICAgLy8gVW5iaW5kIGFsbCAucmV2ZWFsIGV2ZW50cyBmcm9tIHRoZSBib2R5LgogICAgICAgIC8vCiAgICAgICAgJCggJ2JvZHknICkudW5iaW5kKCAnLnJldmVhbCcgKTsKCiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGNsb3NlVmlkZW9zKCkgewogICAgICAgIHZhciB2aWRlbyA9IG1vZGFsLmZpbmQoJy5mbGV4LXZpZGVvJyksCiAgICAgICAgICAgIGlmcmFtZSA9IHZpZGVvLmZpbmQoJ2lmcmFtZScpOwogICAgICAgIGlmIChpZnJhbWUubGVuZ3RoID4gMCkgewogICAgICAgICAgaWZyYW1lLmRhdGEoInNyYyIsIGlmcmFtZS5hdHRyKCJzcmMiKSk7CiAgICAgICAgICBpZnJhbWUuYXR0cigic3JjIiwgIiIpOwogICAgICAgICAgdmlkZW8uZmFkZU91dCgxMDApOyAgCiAgICAgICAgfQogICAgICB9CgogICAgICAvLwogICAgICAvLyBCaW5kIHRoZSBtb2RhbCAnY2xvc2UnIGV2ZW50CiAgICAgIC8vCiAgICAgIG1vZGFsLmJpbmQoICdyZXZlYWw6Y2xvc2UucmV2ZWFsJywgY2xvc2VBbmltYXRpb24gKTsKICAgICAgbW9kYWwuYmluZCggJ3JldmVhbDpjbG9zZWQucmV2ZWFsJywgY2xvc2VWaWRlb3MgKTsKICAgICAgLy8KICAgICAgLy8gQmluZCB0aGUgbW9kYWwgJ29wZW5lZCcgKyAnY2xvc2VkJyBldmVudAogICAgICAvLyBDYWxscyB0aGUgdW5sb2NrTW9kYWwgbWV0aG9kLgogICAgICAvLwogICAgICBtb2RhbC5iaW5kKCAncmV2ZWFsOm9wZW5lZC5yZXZlYWwgcmV2ZWFsOmNsb3NlZC5yZXZlYWwnLCB1bmxvY2tNb2RhbCApOwogICAgICAvLwogICAgICAvLyBCaW5kIHRoZSBtb2RhbCAnY2xvc2VkJyBldmVudC4KICAgICAgLy8gQ2FsbHMgdGhlIGRlc3Ryb3kgbWV0aG9kLgogICAgICAvLwogICAgICBtb2RhbC5iaW5kKCAncmV2ZWFsOmNsb3NlZC5yZXZlYWwnLCBkZXN0cm95ICk7CiAgICAgIC8vCiAgICAgIC8vIEJpbmQgdGhlIG1vZGFsICdvcGVuJyBldmVudAogICAgICAvLyBIYW5kbGVkIGJ5IHRoZSBvcHRpb25zLm9wZW4gcHJvcGVydHkgZnVuY3Rpb24uCiAgICAgIC8vCiAgICAgIG1vZGFsLmJpbmQoICdyZXZlYWw6b3Blbi5yZXZlYWwnLCBvcHRpb25zLm9wZW4gKTsKICAgICAgLy8KICAgICAgLy8gQmluZCB0aGUgbW9kYWwgJ29wZW5lZCcgZXZlbnQuCiAgICAgIC8vIEhhbmRsZWQgYnkgdGhlIG9wdGlvbnMub3BlbmVkIHByb3BlcnR5IGZ1bmN0aW9uLgogICAgICAvLwogICAgICBtb2RhbC5iaW5kKCAncmV2ZWFsOm9wZW5lZC5yZXZlYWwnLCBvcHRpb25zLm9wZW5lZCApOwogICAgICAvLwogICAgICAvLyBCaW5kIHRoZSBtb2RhbCAnY2xvc2UnIGV2ZW50LgogICAgICAvLyBIYW5kbGVkIGJ5IHRoZSBvcHRpb25zLmNsb3NlIHByb3BlcnR5IGZ1bmN0aW9uLgogICAgICAvLwogICAgICBtb2RhbC5iaW5kKCAncmV2ZWFsOmNsb3NlLnJldmVhbCcsIG9wdGlvbnMuY2xvc2UgKTsKICAgICAgLy8KICAgICAgLy8gQmluZCB0aGUgbW9kYWwgJ2Nsb3NlZCcgZXZlbnQuCiAgICAgIC8vIEhhbmRsZWQgYnkgdGhlIG9wdGlvbnMuY2xvc2VkIHByb3BlcnR5IGZ1bmN0aW9uLgogICAgICAvLwogICAgICBtb2RhbC5iaW5kKCAncmV2ZWFsOmNsb3NlZC5yZXZlYWwnLCBvcHRpb25zLmNsb3NlZCApOwoKICAgICAgLy8KICAgICAgLy8gV2UncmUgcnVubmluZyB0aGlzIGZvciB0aGUgZmlyc3QgdGltZS4KICAgICAgLy8gVHJpZ2dlciB0aGUgbW9kYWwgJ29wZW4nIGV2ZW50LgogICAgICAvLwogICAgICBtb2RhbC50cmlnZ2VyKCAncmV2ZWFsOm9wZW4nICk7CgogICAgICAvLwogICAgICAvLyBHZXQgdGhlIGNsb3NlQnV0dG9uIHZhcmlhYmxlIGVsZW1lbnQocykuCiAgICAgIC8vCiAgICAgJGNsb3NlQnV0dG9uID0gJCggJy4nICsgb3B0aW9ucy5kaXNtaXNzTW9kYWxDbGFzcyApCiAgICAgLy8KICAgICAvLyBCaW5kIHRoZSBlbGVtZW50ICdjbGljaycgZXZlbnQgYW5kIGhhbmRsZXIuCiAgICAgLy8KICAgICAuYmluZCggJ2NsaWNrLnJldmVhbCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICAvLwogICAgICAgIC8vIFRyaWdnZXIgdGhlIG1vZGFsICdjbG9zZScgZXZlbnQuCiAgICAgICAgLy8KICAgICAgICBtb2RhbC50cmlnZ2VyKCAncmV2ZWFsOmNsb3NlJyApOwoKICAgICAgfSk7CgogICAgIC8vCiAgICAgLy8gU2hvdWxkIHdlIGNsb3NlIHRoZSBtb2RhbCBiYWNrZ3JvdW5kIG9uIGNsaWNrPwogICAgIC8vCiAgICAgaWYgKCBvcHRpb25zLmNsb3NlT25CYWNrZ3JvdW5kQ2xpY2sgKSB7CiAgICAgIC8vCiAgICAgIC8vIFllcywgY2xvc2UgdGhlIG1vZGFsIGJhY2tncm91bmQgb24gJ2NsaWNrJwogICAgICAvLyBTZXQgdGhlIG1vZGFsIGJhY2tncm91bmQgY3NzICdjdXJzb3InIHByb3BldHkgdG8gcG9pbnRlci4KICAgICAgLy8gQWRkcyBhIHBvaW50ZXIgc3ltYm9sIHdoZW4geW91IG1vdXNlIG92ZXIgdGhlIG1vZGFsIGJhY2tncm91bmQuCiAgICAgIC8vCiAgICAgIG1vZGFsQmcuY3NzKCB7ICJjdXJzb3IiOiAicG9pbnRlciIgfSApOwogICAgICAvLwogICAgICAvLyBCaW5kIGEgJ2NsaWNrJyBldmVudCBoYW5kbGVyIHRvIHRoZSBtb2RhbCBiYWNrZ3JvdW5kLgogICAgICAvLwogICAgICBtb2RhbEJnLmJpbmQoICdjbGljay5yZXZlYWwnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8KICAgICAgICAvLyBUcmlnZ2VyIHRoZSBtb2RhbCAnY2xvc2UnIGV2ZW50LgogICAgICAgIC8vCiAgICAgICAgbW9kYWwudHJpZ2dlciggJ3JldmVhbDpjbG9zZScgKTsKCiAgICAgIH0pOwoKICAgICB9CgogICAgIC8vCiAgICAgLy8gQmluZCBrZXl1cCBmdW5jdGlvbnMgb24gdGhlIGJvZHkgZWxlbWVudC4KICAgICAvLyBXZSdsbCB3YW50IHRvIGNsb3NlIHRoZSBtb2RhbCB3aGVuIHRoZSAnZXNjYXBlJyBrZXkgaXMgaGl0LgogICAgIC8vCiAgICAgJCggJ2JvZHknICkuYmluZCggJ2tleXVwLnJldmVhbCcsIGZ1bmN0aW9uICggZXZlbnQgKSB7CiAgICAgIC8vCiAgICAgIC8vIERpZCB0aGUgZXNjYXBlIGtleSBnZXQgdHJpZ2dlcmVkPwogICAgICAvLwogICAgICAgaWYgKCBldmVudC53aGljaCA9PT0gMjcgKSB7IC8vIDI3IGlzIHRoZSBrZXljb2RlIGZvciB0aGUgRXNjYXBlIGtleQogICAgICAgICAvLwogICAgICAgICAvLyBFc2NhcGUga2V5IHdhcyB0cmlnZ2VyZWQuCiAgICAgICAgIC8vIFRyaWdnZXIgdGhlIG1vZGFsICdjbG9zZScgZXZlbnQuCiAgICAgICAgIC8vCiAgICAgICAgIG1vZGFsLnRyaWdnZXIoICdyZXZlYWw6Y2xvc2UnICk7CiAgICAgICB9CgogICAgICB9KTsgLy8gZW5kICQoYm9keSkKCiAgICB9KTsgLy8gZW5kIHRoaXMuZWFjaAoKICB9OyAvLyBlbmQgJC5mbgoKfSAoIGpRdWVyeSApICk7Cg==]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.tabs.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[OyhmdW5jdGlvbiAoJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7CiAgJ3VzZSBzdHJpY3QnOwoKICB2YXIgc2V0dGluZ3MgPSB7CiAgICAgICAgY2FsbGJhY2s6ICQubm9vcCwKICAgICAgICBkZWVwX2xpbmtpbmc6IHRydWUsCiAgICAgICAgaW5pdDogZmFsc2UKICAgICAgfSwKCiAgICAgIG1ldGhvZHMgPSB7CiAgICAgICAgaW5pdCA6IGZ1bmN0aW9uIChvcHRpb25zKSB7CiAgICAgICAgICBzZXR0aW5ncyA9ICQuZXh0ZW5kKHt9LCBzZXR0aW5ncywgb3B0aW9ucyk7CgogICAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmICghc2V0dGluZ3MuaW5pdCkgbWV0aG9kcy5ldmVudHMoKTsKCiAgICAgICAgICAgIGlmIChzZXR0aW5ncy5kZWVwX2xpbmtpbmcpIG1ldGhvZHMuZnJvbV9oYXNoKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9LAoKICAgICAgICBldmVudHMgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAkKGRvY3VtZW50KS5vbignY2xpY2suZm5kdG4nLCAnLnRhYnMgYScsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIG1ldGhvZHMuc2V0X3RhYigkKHRoaXMpLnBhcmVudCgnZGQsIGxpJyksIGUpOwogICAgICAgICAgfSk7CiAgICAgICAgICAKICAgICAgICAgIHNldHRpbmdzLmluaXQgPSB0cnVlOwogICAgICAgIH0sCgogICAgICAgIHNldF90YWIgOiBmdW5jdGlvbiAoJHRhYiwgZSkgewogICAgICAgICAgdmFyICRhY3RpdmVUYWIgPSAkdGFiLmNsb3Nlc3QoJ2RsLCB1bCcpLmZpbmQoJy5hY3RpdmUnKSwKICAgICAgICAgICAgICB0YXJnZXQgPSAkdGFiLmNoaWxkcmVuKCdhJykuYXR0cigiaHJlZiIpLAogICAgICAgICAgICAgIGhhc0hhc2ggPSAvXiMvLnRlc3QodGFyZ2V0KSwKICAgICAgICAgICAgICAkY29udGVudCA9ICQodGFyZ2V0ICsgJ1RhYicpOwoKICAgICAgICAgIGlmIChoYXNIYXNoICYmICRjb250ZW50Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgLy8gU2hvdyB0YWIgY29udGVudAogICAgICAgICAgICBpZiAoZSAmJiAhc2V0dGluZ3MuZGVlcF9saW5raW5nKSBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICRjb250ZW50LmNsb3Nlc3QoJy50YWJzLWNvbnRlbnQnKS5jaGlsZHJlbignbGknKS5yZW1vdmVDbGFzcygnYWN0aXZlJykuaGlkZSgpOwogICAgICAgICAgICAkY29udGVudC5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKS5hZGRDbGFzcygnYWN0aXZlJyk7CiAgICAgICAgICB9CgogICAgICAgICAgLy8gTWFrZSBhY3RpdmUgdGFiCiAgICAgICAgICAkYWN0aXZlVGFiLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTsKICAgICAgICAgICR0YWIuYWRkQ2xhc3MoJ2FjdGl2ZScpOwoKICAgICAgICAgIHNldHRpbmdzLmNhbGxiYWNrKCk7CiAgICAgICAgfSwKCiAgICAgICAgZnJvbV9oYXNoIDogZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaCwKICAgICAgICAgICAgICAkdGFiID0gJCgnYVtocmVmPSInICsgaGFzaCArICciXScpOwoKICAgICAgICAgICR0YWIudHJpZ2dlcignY2xpY2suZm5kdG4nKTsKICAgICAgICB9CiAgICAgIH0KCiAgJC5mbi5mb3VuZGF0aW9uVGFicyA9IGZ1bmN0aW9uIChtZXRob2QpIHsKICAgIGlmIChtZXRob2RzW21ldGhvZF0pIHsKICAgICAgcmV0dXJuIG1ldGhvZHNbbWV0aG9kXS5hcHBseSh0aGlzLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTsKICAgIH0gZWxzZSBpZiAodHlwZW9mIG1ldGhvZCA9PT0gJ29iamVjdCcgfHwgIW1ldGhvZCkgewogICAgICByZXR1cm4gbWV0aG9kcy5pbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9IGVsc2UgewogICAgICAkLmVycm9yKCdNZXRob2QgJyArICBtZXRob2QgKyAnIGRvZXMgbm90IGV4aXN0IG9uIGpRdWVyeS5mb3VuZGF0aW9uVGFicycpOwogICAgfQogIH07Cn0oalF1ZXJ5LCB0aGlzLCB0aGlzLmRvY3VtZW50KSk7Cg==]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.tooltips.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.foundation.topbar.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[LyoKICogalF1ZXJ5IEZvdW5kYXRpb24gVG9wIEJhciAyLjAuMwogKiBodHRwOi8vZm91bmRhdGlvbi56dXJiLmNvbQogKiBDb3B5cmlnaHQgMjAxMiwgWlVSQgogKiBGcmVlIHRvIHVzZSB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwCiovCgovKmpzbGludCB1bnBhcmFtOiB0cnVlLCBicm93c2VyOiB0cnVlLCBpbmRlbnQ6IDIgKi8KCjsoZnVuY3Rpb24gKCQsIHdpbmRvdywgdW5kZWZpbmVkKSB7CiAgJ3VzZSBzdHJpY3QnOwoKICB2YXIgc2V0dGluZ3MgPSB7CiAgICAgIGluZGV4IDogMCwKICAgICAgaW5pdGlhbGl6ZWQgOiBmYWxzZQogICAgfSwKCiAgICBtZXRob2RzID0gewogICAgICBpbml0IDogZnVuY3Rpb24gKG9wdGlvbnMpIHsKICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHNldHRpbmdzID0gJC5leHRlbmQoc2V0dGluZ3MsIG9wdGlvbnMpOwogICAgICAgICAgc2V0dGluZ3MuJHcgPSAkKHdpbmRvdyksCiAgICAgICAgICBzZXR0aW5ncy4kdG9wYmFyID0gJCgnbmF2LnRvcC1iYXInKSwKICAgICAgICAgIHNldHRpbmdzLiRzZWN0aW9uID0gc2V0dGluZ3MuJHRvcGJhci5maW5kKCdzZWN0aW9uJyksCiAgICAgICAgICBzZXR0aW5ncy4kdGl0bGViYXIgPSBzZXR0aW5ncy4kdG9wYmFyLmNoaWxkcmVuKCd1bDpmaXJzdCcpOwoKICAgICAgICAgIHZhciBicmVha3BvaW50ID0gJCgiPGRpdiBjbGFzcz0ndG9wLWJhci1qcy1icmVha3BvaW50Jy8+IikuYXBwZW5kVG8oImJvZHkiKTsKICAgICAgICAgIHNldHRpbmdzLmJyZWFrUG9pbnQgPSBicmVha3BvaW50LndpZHRoKCk7CiAgICAgICAgICBicmVha3BvaW50LnJlbW92ZSgpOwoKICAgICAgICAgIGlmICghc2V0dGluZ3MuaW5pdGlhbGl6ZWQpIHsKICAgICAgICAgICAgbWV0aG9kcy5hc3NlbWJsZSgpOwogICAgICAgICAgICBzZXR0aW5ncy5pbml0aWFsaXplZCA9IHRydWU7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKCFzZXR0aW5ncy5oZWlnaHQpIHsKICAgICAgICAgICAgbWV0aG9kcy5sYXJnZXN0VUwoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoc2V0dGluZ3MuJHRvcGJhci5wYXJlbnQoKS5oYXNDbGFzcygnZml4ZWQnKSkgewogICAgICAgICAgICAkKCdib2R5JykuY3NzKCdwYWRkaW5nLXRvcCcsc2V0dGluZ3MuJHRvcGJhci5vdXRlckhlaWdodCgpKQogICAgICAgICAgfQoKICAgICAgICAgICQoJy50b3AtYmFyIC50b2dnbGUtdG9wYmFyJykuZGllKCdjbGljay5mbmR0bicpLmxpdmUoJ2NsaWNrLmZuZHRuJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgaWYgKG1ldGhvZHMuYnJlYWtwb2ludCgpKSB7CiAgICAgICAgICAgICAgc2V0dGluZ3MuJHRvcGJhci50b2dnbGVDbGFzcygnZXhwYW5kZWQnKTsKICAgICAgICAgICAgICBzZXR0aW5ncy4kdG9wYmFyLmNzcygnbWluLWhlaWdodCcsICcnKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFzZXR0aW5ncy4kdG9wYmFyLmhhc0NsYXNzKCdleHBhbmRlZCcpKSB7CiAgICAgICAgICAgICAgc2V0dGluZ3MuJHNlY3Rpb24uY3NzKHtsZWZ0OiAnMCUnfSk7CiAgICAgICAgICAgICAgc2V0dGluZ3MuJHNlY3Rpb24uZmluZCgnPi5uYW1lJykuY3NzKHtsZWZ0OiAnMTAwJSd9KTsKICAgICAgICAgICAgICBzZXR0aW5ncy4kc2VjdGlvbi5maW5kKCdsaS5tb3ZlZCcpLnJlbW92ZUNsYXNzKCdtb3ZlZCcpOwogICAgICAgICAgICAgIHNldHRpbmdzLmluZGV4ID0gMDsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CgogICAgICAgICAgLy8gU2hvdyB0aGUgRHJvcGRvd24gTGV2ZWxzIG9uIENsaWNrCiAgICAgICAgICAkKCcudG9wLWJhciAuaGFzLWRyb3Bkb3duPmEnKS5kaWUoJ2NsaWNrLmZuZHRuJykubGl2ZSgnY2xpY2suZm5kdG4nLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBpZiAoTW9kZXJuaXpyLnRvdWNoIHx8IG1ldGhvZHMuYnJlYWtwb2ludCgpKQogICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKCiAgICAgICAgICAgIGlmIChtZXRob2RzLmJyZWFrcG9pbnQoKSkgewogICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyksCiAgICAgICAgICAgICAgICAgICRzZWxlY3RlZExpID0gJHRoaXMuY2xvc2VzdCgnbGknKTsKCiAgICAgICAgICAgICAgc2V0dGluZ3MuaW5kZXggKz0gMTsKICAgICAgICAgICAgICAkc2VsZWN0ZWRMaS5hZGRDbGFzcygnbW92ZWQnKTsKICAgICAgICAgICAgICBzZXR0aW5ncy4kc2VjdGlvbi5jc3Moe2xlZnQ6IC0oMTAwICogc2V0dGluZ3MuaW5kZXgpICsgJyUnfSk7CiAgICAgICAgICAgICAgc2V0dGluZ3MuJHNlY3Rpb24uZmluZCgnPi5uYW1lJykuY3NzKHtsZWZ0OiAxMDAgKiBzZXR0aW5ncy5pbmRleCArICclJ30pOwoKICAgICAgICAgICAgICAkdGhpcy5zaWJsaW5ncygndWwnKS5oZWlnaHQoc2V0dGluZ3MuaGVpZ2h0ICsgc2V0dGluZ3MuJHRpdGxlYmFyLm91dGVySGVpZ2h0KHRydWUpKTsKICAgICAgICAgICAgICBzZXR0aW5ncy4kdG9wYmFyLmNzcygnbWluLWhlaWdodCcsIHNldHRpbmdzLmhlaWdodCArIHNldHRpbmdzLiR0aXRsZWJhci5vdXRlckhlaWdodCh0cnVlKSAqIDIpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwoKICAgICAgICAgICQod2luZG93KS5vbigncmVzaXplLmZuZHRuLnRvcGJhcicsZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGlmICghbWV0aG9kcy5icmVha3BvaW50KCkpIHsKICAgICAgICAgICAgICBzZXR0aW5ncy4kdG9wYmFyLmNzcygnbWluLWhlaWdodCcsICcnKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CgogICAgICAgICAgLy8gR28gdXAgYSBsZXZlbCBvbiBDbGljawogICAgICAgICAgJCgnLnRvcC1iYXIgLmhhcy1kcm9wZG93biAuYmFjaycpLmRpZSgnY2xpY2suZm5kdG4nKS5saXZlKCdjbGljay5mbmR0bicsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKCiAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyksCiAgICAgICAgICAgICAgJG1vdmVkTGkgPSAkdGhpcy5jbG9zZXN0KCdsaS5tb3ZlZCcpLAogICAgICAgICAgICAgICRwcmV2aW91c0xldmVsVWwgPSAkbW92ZWRMaS5wYXJlbnQoKTsKCiAgICAgICAgICAgIHNldHRpbmdzLmluZGV4IC09IDE7CiAgICAgICAgICAgIHNldHRpbmdzLiRzZWN0aW9uLmNzcyh7bGVmdDogLSgxMDAgKiBzZXR0aW5ncy5pbmRleCkgKyAnJSd9KTsKICAgICAgICAgICAgc2V0dGluZ3MuJHNlY3Rpb24uZmluZCgnPi5uYW1lJykuY3NzKHsnbGVmdCc6IDEwMCAqIHNldHRpbmdzLmluZGV4ICsgJyUnfSk7CgogICAgICAgICAgICBpZiAoc2V0dGluZ3MuaW5kZXggPT09IDApIHsKICAgICAgICAgICAgICBzZXR0aW5ncy4kdG9wYmFyLmNzcygnbWluLWhlaWdodCcsIDApOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAkbW92ZWRMaS5yZW1vdmVDbGFzcygnbW92ZWQnKTsKICAgICAgICAgICAgfSwgMzAwKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9LAoKICAgICAgYnJlYWtwb2ludCA6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gc2V0dGluZ3MuJHcud2lkdGgoKSA8IHNldHRpbmdzLmJyZWFrUG9pbnQ7CiAgICAgIH0sCgogICAgICBhc3NlbWJsZSA6IGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBQdWxsIGVsZW1lbnQgb3V0IG9mIHRoZSBET00gZm9yIG1hbmlwdWxhdGlvbgogICAgICAgIHNldHRpbmdzLiRzZWN0aW9uLmRldGFjaCgpOwoKICAgICAgICBzZXR0aW5ncy4kc2VjdGlvbi5maW5kKCcuaGFzLWRyb3Bkb3duPmEnKS5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciAkbGluayA9ICQodGhpcyksCiAgICAgICAgICAgICAgJGRyb3Bkb3duID0gJGxpbmsuc2libGluZ3MoJy5kcm9wZG93bicpLAogICAgICAgICAgICAgICR0aXRsZUxpID0gJCgnPGxpIGNsYXNzPSJ0aXRsZSBiYWNrIGpzLWdlbmVyYXRlZCI+PGg1PjxhIGhyZWY9IiMiPjwvYT48L2g1PjwvbGk+Jyk7CgogICAgICAgICAgLy8gQ29weSBsaW5rIHRvIHN1Ym5hdgogICAgICAgICAgJHRpdGxlTGkuZmluZCgnaDU+YScpLmh0bWwoJGxpbmsuaHRtbCgpKTsKICAgICAgICAgICRkcm9wZG93bi5wcmVwZW5kKCR0aXRsZUxpKTsKICAgICAgICB9KTsKCiAgICAgICAgLy8gUHV0IGVsZW1lbnQgYmFjayBpbiB0aGUgRE9NCiAgICAgICAgc2V0dGluZ3MuJHNlY3Rpb24uYXBwZW5kVG8oc2V0dGluZ3MuJHRvcGJhcik7CiAgICAgIH0sCgogICAgICBsYXJnZXN0VUwgOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIHVscyA9IHNldHRpbmdzLiR0b3BiYXIuZmluZCgnc2VjdGlvbiB1bCB1bCcpLAogICAgICAgICAgICBsYXJnZXN0ID0gdWxzLmZpcnN0KCksCiAgICAgICAgICAgIHRvdGFsID0gMDsKCiAgICAgICAgdWxzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKCQodGhpcykuY2hpbGRyZW4oJ2xpJykubGVuZ3RoID4gbGFyZ2VzdC5jaGlsZHJlbignbGknKS5sZW5ndGgpIHsKICAgICAgICAgICAgbGFyZ2VzdCA9ICQodGhpcyk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIGxhcmdlc3QuY2hpbGRyZW4oJ2xpJykuZWFjaChmdW5jdGlvbiAoKSB7IHRvdGFsICs9ICQodGhpcykub3V0ZXJIZWlnaHQodHJ1ZSk7IH0pOwoKICAgICAgICBzZXR0aW5ncy5oZWlnaHQgPSB0b3RhbDsKICAgICAgfQogICAgfTsKCiAgJC5mbi5mb3VuZGF0aW9uVG9wQmFyID0gZnVuY3Rpb24gKG1ldGhvZCkgewogICAgaWYgKG1ldGhvZHNbbWV0aG9kXSkgewogICAgICByZXR1cm4gbWV0aG9kc1ttZXRob2RdLmFwcGx5KHRoaXMsIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpOwogICAgfSBlbHNlIGlmICh0eXBlb2YgbWV0aG9kID09PSAnb2JqZWN0JyB8fCAhbWV0aG9kKSB7CiAgICAgIHJldHVybiBtZXRob2RzLmluaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0gZWxzZSB7CiAgICAgICQuZXJyb3IoJ01ldGhvZCAnICsgIG1ldGhvZCArICcgZG9lcyBub3QgZXhpc3Qgb24galF1ZXJ5LmZvdW5kYXRpb25Ub3BCYXInKTsKICAgIH0KICB9OwoKICAvLyBNb25pdG9yIHNjcm9sbCBwb3NpdGlvbiBmb3Igc3RpY2t5CiAgaWYgKCQoJy5zdGlja3knKS5sZW5ndGggPiAwKSB7CiAgICB2YXIgZGlzdGFuY2UgPSAkKCcuc3RpY2t5JykubGVuZ3RoID8gJCgnLnN0aWNreScpLm9mZnNldCgpLnRvcDogMCwKICAgICAgICAkd2luZG93ID0gJCh3aW5kb3cpOwoKICAgICAgJHdpbmRvdy5zY3JvbGwoZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCAkd2luZG93LnNjcm9sbFRvcCgpID49IGRpc3RhbmNlICkgewogICAgICAgICAgICQoIi5zdGlja3kiKS5hZGRDbGFzcygiZml4ZWQiKTsKICAgICAgICB9CgogICAgICAgZWxzZSBpZiAoICR3aW5kb3cuc2Nyb2xsVG9wKCkgPCBkaXN0YW5jZSApIHsKICAgICAgICAgICQoIi5zdGlja3kiKS5yZW1vdmVDbGFzcygiZml4ZWQiKTsKICAgICAgIH0KICAgIH0pOwogIH0KCn0oalF1ZXJ5LCB0aGlzKSk7Cg==]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/jquery.placeholder.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[LyohIGh0dHA6Ly9tdGhzLmJlL3BsYWNlaG9sZGVyIHYyLjAuNyBieSBAbWF0aGlhcyAqLwo7KGZ1bmN0aW9uKHdpbmRvdywgZG9jdW1lbnQsICQpIHsKCgl2YXIgaXNJbnB1dFN1cHBvcnRlZCA9ICdwbGFjZWhvbGRlcicgaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKSwKCSAgICBpc1RleHRhcmVhU3VwcG9ydGVkID0gJ3BsYWNlaG9sZGVyJyBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpLAoJICAgIHByb3RvdHlwZSA9ICQuZm4sCgkgICAgdmFsSG9va3MgPSAkLnZhbEhvb2tzLAoJICAgIGhvb2tzLAoJICAgIHBsYWNlaG9sZGVyOwoKCWlmIChpc0lucHV0U3VwcG9ydGVkICYmIGlzVGV4dGFyZWFTdXBwb3J0ZWQpIHsKCgkJcGxhY2Vob2xkZXIgPSBwcm90b3R5cGUucGxhY2Vob2xkZXIgPSBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIHRoaXM7CgkJfTsKCgkJcGxhY2Vob2xkZXIuaW5wdXQgPSBwbGFjZWhvbGRlci50ZXh0YXJlYSA9IHRydWU7CgoJfSBlbHNlIHsKCgkJcGxhY2Vob2xkZXIgPSBwcm90b3R5cGUucGxhY2Vob2xkZXIgPSBmdW5jdGlvbigpIHsKCQkJdmFyICR0aGlzID0gdGhpczsKCQkJJHRoaXMKCQkJCS5maWx0ZXIoKGlzSW5wdXRTdXBwb3J0ZWQgPyAndGV4dGFyZWEnIDogJzppbnB1dCcpICsgJ1twbGFjZWhvbGRlcl0nKQoJCQkJLm5vdCgnLnBsYWNlaG9sZGVyJykKCQkJCS5iaW5kKHsKCQkJCQknZm9jdXMucGxhY2Vob2xkZXInOiBjbGVhclBsYWNlaG9sZGVyLAoJCQkJCSdibHVyLnBsYWNlaG9sZGVyJzogc2V0UGxhY2Vob2xkZXIKCQkJCX0pCgkJCQkuZGF0YSgncGxhY2Vob2xkZXItZW5hYmxlZCcsIHRydWUpCgkJCQkudHJpZ2dlcignYmx1ci5wbGFjZWhvbGRlcicpOwoJCQlyZXR1cm4gJHRoaXM7CgkJfTsKCgkJcGxhY2Vob2xkZXIuaW5wdXQgPSBpc0lucHV0U3VwcG9ydGVkOwoJCXBsYWNlaG9sZGVyLnRleHRhcmVhID0gaXNUZXh0YXJlYVN1cHBvcnRlZDsKCgkJaG9va3MgPSB7CgkJCSdnZXQnOiBmdW5jdGlvbihlbGVtZW50KSB7CgkJCQl2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpOwoJCQkJcmV0dXJuICRlbGVtZW50LmRhdGEoJ3BsYWNlaG9sZGVyLWVuYWJsZWQnKSAmJiAkZWxlbWVudC5oYXNDbGFzcygncGxhY2Vob2xkZXInKSA/ICcnIDogZWxlbWVudC52YWx1ZTsKCQkJfSwKCQkJJ3NldCc6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlKSB7CgkJCQl2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpOwoJCQkJaWYgKCEkZWxlbWVudC5kYXRhKCdwbGFjZWhvbGRlci1lbmFibGVkJykpIHsKCQkJCQlyZXR1cm4gZWxlbWVudC52YWx1ZSA9IHZhbHVlOwoJCQkJfQoJCQkJaWYgKHZhbHVlID09ICcnKSB7CgkJCQkJZWxlbWVudC52YWx1ZSA9IHZhbHVlOwoJCQkJCS8vIElzc3VlICM1NjogU2V0dGluZyB0aGUgcGxhY2Vob2xkZXIgY2F1c2VzIHByb2JsZW1zIGlmIHRoZSBlbGVtZW50IGNvbnRpbnVlcyB0byBoYXZlIGZvY3VzLgoJCQkJCWlmIChlbGVtZW50ICE9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHsKCQkJCQkJLy8gV2UgY2FuJ3QgdXNlIGB0cmlnZ2VySGFuZGxlcmAgaGVyZSBiZWNhdXNlIG9mIGR1bW15IHRleHQvcGFzc3dvcmQgaW5wdXRzIDooCgkJCQkJCXNldFBsYWNlaG9sZGVyLmNhbGwoZWxlbWVudCk7CgkJCQkJfQoJCQkJfSBlbHNlIGlmICgkZWxlbWVudC5oYXNDbGFzcygncGxhY2Vob2xkZXInKSkgewoJCQkJCWNsZWFyUGxhY2Vob2xkZXIuY2FsbChlbGVtZW50LCB0cnVlLCB2YWx1ZSkgfHwgKGVsZW1lbnQudmFsdWUgPSB2YWx1ZSk7CgkJCQl9IGVsc2UgewoJCQkJCWVsZW1lbnQudmFsdWUgPSB2YWx1ZTsKCQkJCX0KCQkJCS8vIGBzZXRgIGNhbiBub3QgcmV0dXJuIGB1bmRlZmluZWRgOyBzZWUgaHR0cDovL2pzYXBpLmluZm8vanF1ZXJ5LzEuNy4xL3ZhbCNMMjM2MwoJCQkJcmV0dXJuICRlbGVtZW50OwoJCQl9CgkJfTsKCgkJaXNJbnB1dFN1cHBvcnRlZCB8fCAodmFsSG9va3MuaW5wdXQgPSBob29rcyk7CgkJaXNUZXh0YXJlYVN1cHBvcnRlZCB8fCAodmFsSG9va3MudGV4dGFyZWEgPSBob29rcyk7CgoJCSQoZnVuY3Rpb24oKSB7CgkJCS8vIExvb2sgZm9yIGZvcm1zCgkJCSQoZG9jdW1lbnQpLmRlbGVnYXRlKCdmb3JtJywgJ3N1Ym1pdC5wbGFjZWhvbGRlcicsIGZ1bmN0aW9uKCkgewoJCQkJLy8gQ2xlYXIgdGhlIHBsYWNlaG9sZGVyIHZhbHVlcyBzbyB0aGV5IGRvbid0IGdldCBzdWJtaXR0ZWQKCQkJCXZhciAkaW5wdXRzID0gJCgnLnBsYWNlaG9sZGVyJywgdGhpcykuZWFjaChjbGVhclBsYWNlaG9sZGVyKTsKCQkJCXNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CgkJCQkJJGlucHV0cy5lYWNoKHNldFBsYWNlaG9sZGVyKTsKCQkJCX0sIDEwKTsKCQkJfSk7CgkJfSk7CgoJCS8vIENsZWFyIHBsYWNlaG9sZGVyIHZhbHVlcyB1cG9uIHBhZ2UgcmVsb2FkCgkJJCh3aW5kb3cpLmJpbmQoJ2JlZm9yZXVubG9hZC5wbGFjZWhvbGRlcicsIGZ1bmN0aW9uKCkgewoJCQkkKCcucGxhY2Vob2xkZXInKS5lYWNoKGZ1bmN0aW9uKCkgewoJCQkJdGhpcy52YWx1ZSA9ICcnOwoJCQl9KTsKCQl9KTsKCgl9CgoJZnVuY3Rpb24gYXJncyhlbGVtKSB7CgkJLy8gUmV0dXJuIGFuIG9iamVjdCBvZiBlbGVtZW50IGF0dHJpYnV0ZXMKCQl2YXIgbmV3QXR0cnMgPSB7fSwKCQkgICAgcmlubGluZWpRdWVyeSA9IC9ealF1ZXJ5XGQrJC87CgkJJC5lYWNoKGVsZW0uYXR0cmlidXRlcywgZnVuY3Rpb24oaSwgYXR0cikgewoJCQlpZiAoYXR0ci5zcGVjaWZpZWQgJiYgIXJpbmxpbmVqUXVlcnkudGVzdChhdHRyLm5hbWUpKSB7CgkJCQluZXdBdHRyc1thdHRyLm5hbWVdID0gYXR0ci52YWx1ZTsKCQkJfQoJCX0pOwoJCXJldHVybiBuZXdBdHRyczsKCX0KCglmdW5jdGlvbiBjbGVhclBsYWNlaG9sZGVyKGV2ZW50LCB2YWx1ZSkgewoJCXZhciBpbnB1dCA9IHRoaXMsCgkJICAgICRpbnB1dCA9ICQoaW5wdXQpOwoJCWlmIChpbnB1dC52YWx1ZSA9PSAkaW5wdXQuYXR0cigncGxhY2Vob2xkZXInKSAmJiAkaW5wdXQuaGFzQ2xhc3MoJ3BsYWNlaG9sZGVyJykpIHsKCQkJaWYgKCRpbnB1dC5kYXRhKCdwbGFjZWhvbGRlci1wYXNzd29yZCcpKSB7CgkJCQkkaW5wdXQgPSAkaW5wdXQuaGlkZSgpLm5leHQoKS5zaG93KCkuYXR0cignaWQnLCAkaW5wdXQucmVtb3ZlQXR0cignaWQnKS5kYXRhKCdwbGFjZWhvbGRlci1pZCcpKTsKCQkJCS8vIElmIGBjbGVhclBsYWNlaG9sZGVyYCB3YXMgY2FsbGVkIGZyb20gYCQudmFsSG9va3MuaW5wdXQuc2V0YAoJCQkJaWYgKGV2ZW50ID09PSB0cnVlKSB7CgkJCQkJcmV0dXJuICRpbnB1dFswXS52YWx1ZSA9IHZhbHVlOwoJCQkJfQoJCQkJJGlucHV0LmZvY3VzKCk7CgkJCX0gZWxzZSB7CgkJCQlpbnB1dC52YWx1ZSA9ICcnOwoJCQkJJGlucHV0LnJlbW92ZUNsYXNzKCdwbGFjZWhvbGRlcicpOwoJCQkJaW5wdXQgPT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiBpbnB1dC5zZWxlY3QoKTsKCQkJfQoJCX0KCX0KCglmdW5jdGlvbiBzZXRQbGFjZWhvbGRlcigpIHsKCQl2YXIgJHJlcGxhY2VtZW50LAoJCSAgICBpbnB1dCA9IHRoaXMsCgkJICAgICRpbnB1dCA9ICQoaW5wdXQpLAoJCSAgICAkb3JpZ0lucHV0ID0gJGlucHV0LAoJCSAgICBpZCA9IHRoaXMuaWQ7CgkJaWYgKGlucHV0LnZhbHVlID09ICcnKSB7CgkJCWlmIChpbnB1dC50eXBlID09ICdwYXNzd29yZCcpIHsKCQkJCWlmICghJGlucHV0LmRhdGEoJ3BsYWNlaG9sZGVyLXRleHRpbnB1dCcpKSB7CgkJCQkJdHJ5IHsKCQkJCQkJJHJlcGxhY2VtZW50ID0gJGlucHV0LmNsb25lKCkuYXR0cih7ICd0eXBlJzogJ3RleHQnIH0pOwoJCQkJCX0gY2F0Y2goZSkgewoJCQkJCQkkcmVwbGFjZW1lbnQgPSAkKCc8aW5wdXQ+JykuYXR0cigkLmV4dGVuZChhcmdzKHRoaXMpLCB7ICd0eXBlJzogJ3RleHQnIH0pKTsKCQkJCQl9CgkJCQkJJHJlcGxhY2VtZW50CgkJCQkJCS5yZW1vdmVBdHRyKCduYW1lJykKCQkJCQkJLmRhdGEoewoJCQkJCQkJJ3BsYWNlaG9sZGVyLXBhc3N3b3JkJzogdHJ1ZSwKCQkJCQkJCSdwbGFjZWhvbGRlci1pZCc6IGlkCgkJCQkJCX0pCgkJCQkJCS5iaW5kKCdmb2N1cy5wbGFjZWhvbGRlcicsIGNsZWFyUGxhY2Vob2xkZXIpOwoJCQkJCSRpbnB1dAoJCQkJCQkuZGF0YSh7CgkJCQkJCQkncGxhY2Vob2xkZXItdGV4dGlucHV0JzogJHJlcGxhY2VtZW50LAoJCQkJCQkJJ3BsYWNlaG9sZGVyLWlkJzogaWQKCQkJCQkJfSkKCQkJCQkJLmJlZm9yZSgkcmVwbGFjZW1lbnQpOwoJCQkJfQoJCQkJJGlucHV0ID0gJGlucHV0LnJlbW92ZUF0dHIoJ2lkJykuaGlkZSgpLnByZXYoKS5hdHRyKCdpZCcsIGlkKS5zaG93KCk7CgkJCQkvLyBOb3RlOiBgJGlucHV0WzBdICE9IGlucHV0YCBub3chCgkJCX0KCQkJJGlucHV0LmFkZENsYXNzKCdwbGFjZWhvbGRlcicpOwoJCQkkaW5wdXRbMF0udmFsdWUgPSAkaW5wdXQuYXR0cigncGxhY2Vob2xkZXInKTsKCQl9IGVsc2UgewoJCQkkaW5wdXQucmVtb3ZlQ2xhc3MoJ3BsYWNlaG9sZGVyJyk7CgkJfQoJfQoKfSh0aGlzLCBkb2N1bWVudCwgalF1ZXJ5KSk7Cg==]]></data>
	</file>
	<file>
	  <filename>/assets/javascripts/modernizr.foundation.js</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/stylesheets/</filename>
	  <isdir>1</isdir>
	</file>
	<file>
	  <filename>/assets/stylesheets/app.css</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[LyogQXJ0ZnVsbHkgbWFzdGVybWluZGVkIGJ5IFpVUkIgICovCgovKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAKICAgVGFibGUgb2YgQ29udGVudHMKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KOjogU2hhcmVkIFN0eWxlcwo6OiBQYWdlIE5hbWUgMQo6OiBQYWdlIE5hbWUgMgoqLwoKCi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgIFNoYXJlZCBTdHlsZXMKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCgoKLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgUGFnZSBOYW1lIDEKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCgoKCi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgIFBhZ2UgTmFtZSAyCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCgoK]]></data>
	</file>
	<file>
	  <filename>/assets/stylesheets/foundation.css</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/assets/stylesheets/foundation.min.css</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[]]></data>
	</file>
	<file>
	  <filename>/CMSFoundation.module.php</filename>
	  <isdir>0</isdir>
	  <data><![CDATA[PD9waHANCmNsYXNzIENNU0ZvdW5kYXRpb24gZXh0ZW5kcyBDTVNNb2R1bGUNCg0Kew0KDQoJZnVuY3Rpb24gR2V0TmFtZSgpDQoNCgl7DQoNCgkJcmV0dXJuICdDTVNGb3VuZGF0aW9uJzsNCg0KCX0NCg0KCWZ1bmN0aW9uIEdldEZyaWVuZGx5TmFtZSgpDQoNCgl7DQoNCgkJcmV0dXJuICJDTVMgRm91bmRhdGlvbiI7DQoNCgl9DQoNCglmdW5jdGlvbiBHZXRWZXJzaW9uKCkNCg0KCXsNCg0KCQlyZXR1cm4gJzEuNC4xJzsNCg0KCX0NCg0KCWZ1bmN0aW9uIE1pbmltdW1DTVNWZXJzaW9uKCkNCg0KCXsNCg0KCQlyZXR1cm4gJzEuNyc7DQoNCgl9DQoNCglmdW5jdGlvbiBHZXRIZWxwKCkNCg0KCXsNCg0KCQlyZXR1cm4gJHRoaXMtPkxhbmcoJ2hlbHAnKTsNCg0KCX0NCg0KCWZ1bmN0aW9uIEdldEF1dGhvcigpDQoNCgl7DQoNCgkJcmV0dXJuICdOaWNvbGFzIEdyaWxsZXQnOw0KDQoJfQ0KDQoJZnVuY3Rpb24gR2V0QXV0aG9yRW1haWwoKQ0KDQoJew0KDQoJCXJldHVybiAnbi5ncmlsbGV0MDFAZ21haWwuY29tJzsNCg0KCX0NCg0KCWZ1bmN0aW9uIEdldENoYW5nZUxvZygpDQoNCgl7DQoNCgkJcmV0dXJuICR0aGlzLT5MYW5nKCdjaGFuZ2Vsb2cnKTsNCg0KCX0NCg0KCWZ1bmN0aW9uIElzUGx1Z2luTW9kdWxlKCkNCg0KCXsNCg0KCQlyZXR1cm4gdHJ1ZTsNCg0KCX0NCg0KCWZ1bmN0aW9uIEhhc0FkbWluKCkNCg0KCXsNCg0KCQlyZXR1cm4gdHJ1ZTsNCg0KCX0NCg0KCWZ1bmN0aW9uIEdldEFkbWluU2VjdGlvbigpDQoNCgl7DQoNCgkJcmV0dXJuICdleHRlbnNpb25zJzsNCg0KCX0NCg0KCWZ1bmN0aW9uIEdldEFkbWluRGVzY3JpcHRpb24oKQ0KDQoJew0KDQoJCXJldHVybiAkdGhpcy0+TGFuZygnbW9kZGVzY3JpcHRpb24nKTsNCg0KCX0NCg0KCWZ1bmN0aW9uIFZpc2libGVUb0FkbWluVXNlcigpIA0KDQoJew0KDQoJCXJldHVybiAoJHRoaXMtPkNoZWNrUGVybWlzc2lvbignVmlldyBDTVNGb3VuZGF0aW9uJykgfHwgJHRoaXMtPkNoZWNrUGVybWlzc2lvbignQWRtaW5pc3RyYXRlIENNU0ZvdW5kYXRpb24nKSk7DQoNCgl9CQ0KDQoJZnVuY3Rpb24gR2V0RGVwZW5kZW5jaWVzKCkNCgl7DQoJcmV0dXJuIGFycmF5KCdDR0V4dGVuc2lvbnMnPT4nMS4yNCcsDQoJCQkJICdDR1NpbXBsZVNtYXJ0eSc9PicxLjQuNCcsDQoJCQkJICdKUXVlcnlUb29scyc9PicxLjAuMTEnKTsNCgl9DQoNCglmdW5jdGlvbiBBbGxvd0F1dG9JbnN0YWxsKCkNCgl7DQoJcmV0dXJuIEZBTFNFOw0KCX0NCg0KCWZ1bmN0aW9uIEFsbG93QXV0b1VwZ3JhZGUoKQ0KCXsNCglyZXR1cm4gRkFMU0U7DQoJfQ0KDQoJZnVuY3Rpb24gSW5zdGFsbCgpDQoNCgl7DQoJCSRkYiA9ICR0aGlzLT5HZXREYigpOw0KCQkkcXVlcnkgPSAnSU5TRVJUIElOVE8gJy5jbXNfZGJfcHJlZml4KCkuJ21vZHVsZV90ZW1wbGF0ZXMgKG1vZHVsZV9uYW1lLCB0ZW1wbGF0ZV9uYW1lLCBjb250ZW50LCBjcmVhdGVfZGF0ZSwgbW9kaWZpZWRfZGF0ZSkgVkFMVUVTICg/LD8sPyw/LD8pJzsNCgkgICAgJGRiciA9ICRkYi0+RXhlY3V0ZSgkcXVlcnksIGFycmF5KCJNZW51TWFuYWdlciIsICJyZXNwb25zaXZlX21lbnUiLCAiPGRpdiBjbGFzcz1cInJvd1wiPg0KICA8ZGl2IGNsYXNzPVwidHdlbHZlIGNvbHVtbnNcIj4NCntpZiAgXCRjb3VudCA+IDB9DQo8bmF2IGNsYXNzPVwidG9wLWJhclwiPg0KPHVsPg0KICAgICAgICA8bGkgY2xhc3M9XCJuYW1lXCI+DQogICAgICAgICAgPGgxPg0KICAgICAgICAgICAgPGEgaHJlZj1cIiNcIj4NCiAgICAgICAgICAgICANCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICA8L2gxPg0KICAgICAgICA8L2xpPg0KICAgICAgICA8bGkgY2xhc3M9XCJ0b2dnbGUtdG9wYmFyXCI+PGEgaHJlZj1cIiNcIj48L2E+PC9saT4NCiAgICAgIDwvdWw+DQo8c2VjdGlvbj4NCjx1bCBjbGFzcz1cImxlZnRcIj4NCiA8bGkgY2xhc3M9XCJkaXZpZGVyIHNob3ctZm9yLW1lZGl1bS1hbmQtdXBcIj48L2xpPg0Ke2ZvcmVhY2ggZnJvbT1cJG5vZGVsaXN0IGl0ZW09bm9kZX0NCgl7aWYgXCRub2RlLT5jaGlsZHJlbl9leGlzdCA9PSB0cnVlIG9yIFwkbm9kZS0+cGFyZW50ID09IHRydWV9DQoJCXtpZiBcJG5vZGUtPmRlcHRoIDwgXCRub2RlLT5wcmV2ZGVwdGh9DQoJCQk8L3VsPjwvbGk+DQoJCXsvaWZ9DQoJCTxsaSBjbGFzcz1cImhhcy1kcm9wZG93blwiIGlkPVwiY3NzX3tcJG5vZGUtPmFsaWFzfVwiPg0KCQkJPGEgaHJlZj1cIntpZiBcJG5vZGUtPnVybCE9Jyd9e2Vsc2V9I3svaWZ9XCI+e1wkbm9kZS0+bWVudXRleHR9PC9hPg0KCQkJPHVsIGNsYXNzPVwiZHJvcGRvd25cIj4NCgl7ZWxzZX0NCgkJe2lmIFwkbm9kZS0+dHlwZSA9PSdzZWN0aW9uaGVhZGVyJ30NCiAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD1cImNzc197XCRub2RlLT5hbGlhc31cIj48bGFiZWw+e1wkbm9kZS0+bWVudXRleHR9PC9sYWJlbD48L2xpPg0KCQl7ZWxzZWlmIFwkbm9kZS0+dHlwZSA9PSdzZXBhcmF0b3InfQ0KICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwiZGl2aWRlclwiIGlkPVwiY3NzX3tcJG5vZGUtPmFsaWFzfVwiPjwvbGk+DQogICAgICAgICAgICAgICAge2Vsc2V9DQogICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9XCJjc3Nfe1wkbm9kZS0+YWxpYXN9XCI+PGEgaHJlZj1cIntpZiBcJG5vZGUtPnVybCE9Jyd9e1wkbm9kZS0+dXJsfXtlbHNlfSN7L2lmfVwiPntcJG5vZGUtPm1lbnV0ZXh0fTwvYT48L2xpPg0KICAgICAgICAgICAgICAgIHsvaWZ9DQoJey9pZn0NCnsvZm9yZWFjaH0NCjwvdWw+DQogPHVsIGNsYXNzPVwicmlnaHRcIj48bGk+PC9saT4NCjwvdWw+DQo8L3NlY3Rpb24+DQo8L25hdj4NCnsvaWZ9DQo8L2Rpdj4NCjwvZGl2PiIsIHRyaW0oJGRiLT5EQlRpbWVTdGFtcCh0aW1lKCkpLCAiJyIpLCB0cmltKCRkYi0+REJUaW1lU3RhbXAodGltZSgpKSwgIiciKSkpOw0KCQkkcXVlcnkgPSAnSU5TRVJUIElOVE8gJy5jbXNfZGJfcHJlZml4KCkuJ21vZHVsZV9zbWFydHlfcGx1Z2lucyAoc2lnLG5hbWUsbW9kdWxlLHR5cGUsY2FsbGJhY2ssYXZhaWxhYmxlLGNhY2hhYmxlKSBWQUxVRVMgKD8sPyw/LD8sPyw/LD8pJzsNCgkgICAgJGRiciA9ICRkYi0+RXhlY3V0ZSgkcXVlcnksIGFycmF5KG1kNSgiY21zZm91bmRhdGlvbiIpLCJDTVNGb3VuZGF0aW9uIiwiQ01TRm91bmRhdGlvbiIsImZ1bmN0aW9uIiwiczoxNTpcImZ1bmN0aW9uX3BsdWdpblwiIiwxLDApKTsNCg0KCQkkdGhpcy0+Q3JlYXRlUGVybWlzc2lvbignQ01TRm91bmRhdGlvbiBBZG1pbicsICdNYW5hZ2UgQ01TRm91bmRhdGlvbicpOw0KCQkkdGhpcy0+Q3JlYXRlUGVybWlzc2lvbignQ01TRm91bmRhdGlvbiBWaWV3JywgJ1ZpZXcgQ01TRm91bmRhdGlvbicpOw0KDQoJfQ0KDQoJZnVuY3Rpb24gU2V0UGFyYW1ldGVycygpIA0KDQoJew0KDQoJCSR0aGlzLT5SZXN0cmljdFVua25vd25QYXJhbXMoKTsNCg0KCQkkdGhpcy0+UmVnaXN0ZXJNb2R1bGVQbHVnaW4oKTsNCg0KCX0NCg0KCWZ1bmN0aW9uIEluc3RhbGxQb3N0TWVzc2FnZSgpDQoNCgl7DQoNCgkJcmV0dXJuICR0aGlzLT5MYW5nKCdwb3N0aW5zdGFsbCcpOw0KDQoJfQ0KDQoJZnVuY3Rpb24gVW5pbnN0YWxsKCkNCg0KCXsNCgkJJGRiID0gJHRoaXMtPkdldERiKCk7DQoJCSRxdWVyeSA9ICdERUxFVEUgRlJPTSAnLmNtc19kYl9wcmVmaXgoKS4nbW9kdWxlX3NtYXJ0eV9wbHVnaW5zIFdIRVJFIHNpZz0/JzsNCgkgICAgJGRiciA9ICRkYi0+RXhlY3V0ZSgkcXVlcnksIGFycmF5KG1kNSgiY21zZm91bmRhdGlvbiIpKSk7DQoJCSR0aGlzLT5SZW1vdmVQZXJtaXNzaW9uKCdDTVNGb3VuZGF0aW9uIEFkbWluJyk7DQoJCSR0aGlzLT5SZW1vdmVQZXJtaXNzaW9uKCdDTVNGb3VuZGF0aW9uIFZpZXcnKTsNCg0KCX0NCg0KCWZ1bmN0aW9uIFVuaW5zdGFsbFByZU1lc3NhZ2UoKQ0KDQoJew0KDQoJCXJldHVybiAkdGhpcy0+TGFuZygndW5pbnN0YWxsX2NvbmZpcm0nKTsNCg0KCX0NCg0KCWZ1bmN0aW9uIFVuaW5zdGFsbFBvc3RNZXNzYWdlKCkNCg0KCXsNCg0KCQlyZXR1cm4gJHRoaXMtPkxhbmcoJ3Bvc3R1bmluc3RhbGwnKTsNCg0KCX0NCg0KfQ0KDQo/Pg==]]></data>
	</file>
</module>
